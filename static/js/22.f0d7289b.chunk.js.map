{"version":3,"sources":["utils/analytics.js","components/Page.js","views/pages/Error404View.js"],"names":["track","window","gtag","pageview","props","process","event","type","Page","forwardRef","ref","title","children","rest","location","useLocation","sendPageViewEvent","useCallback","page_path","pathname","useEffect","Helmet","useStyles","makeStyles","theme","root","backgroundColor","palette","background","default","minHeight","display","alignItems","padding","spacing","paddingTop","paddingBottom","image","maxWidth","width","maxHeight","height","Error404View","classes","useTheme","mobileDevice","useMediaQuery","breakpoints","down","className","align","variant","color","mt","justifyContent","alt","src","component","RouterLink","to"],"mappings":"+JAAA,SAASA,IAAgB,IAAD,EAKfC,OAAOC,OAIZ,EAAAD,QAAOC,KAAP,mBAWa,OACbC,SATF,SAAkBC,GAChBJ,EAAM,SAAUK,GAAyCD,IASzDE,MANF,SAAeC,EAAMH,GACnBJ,EAAM,QAASO,EAAMH,KCRjBI,EAAOC,sBAAW,WAIrBC,GAAS,IAHVC,EAGS,EAHTA,MACAC,EAES,EAFTA,SACGC,EACM,oCACHC,EAAWC,cAEXC,EAAoBC,uBAAY,WACpCjB,EAAMG,SAAS,CACbe,UAAWJ,EAASK,aAErB,CAACL,IAMJ,OAJAM,qBAAU,WACRJ,MACC,CAACA,IAGF,uCACEN,IAAKA,GACDG,GAEJ,kBAACQ,EAAA,EAAD,KACE,+CAAqBV,IAEtBC,MAUQJ,O,iCC5CjB,0GAaMc,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,WAAWC,QAC1CC,UAAW,OACXC,QAAS,OACTC,WAAY,SACZC,QAAST,EAAMU,QAAQ,GACvBC,WAAY,GACZC,cAAe,IAEjBC,MAAO,CACLC,SAAU,OACVC,MAAO,IACPC,UAAW,IACXC,OAAQ,YA4DGC,UAxDf,WACE,IAAMC,EAAUrB,IACVE,EAAQoB,cACRC,EAAeC,YAActB,EAAMuB,YAAYC,KAAK,OAE1D,OACE,kBAAC,IAAD,CACEC,UAAWN,EAAQlB,KACnBd,MAAM,kBAEN,kBAAC,IAAD,CAAW2B,SAAS,MAClB,kBAAC,IAAD,CACEY,MAAM,SACNC,QAASN,EAAe,KAAO,KAC/BO,MAAM,eAHR,qDAOA,kBAAC,IAAD,CACEF,MAAM,SACNC,QAAQ,YACRC,MAAM,iBAHR,6GAQA,kBAAC,IAAD,CACEC,GAAI,EACJtB,QAAQ,OACRuB,eAAe,UAEf,yBACEC,IAAI,oBACJN,UAAWN,EAAQN,MACnBmB,IAAI,mDAGR,kBAAC,IAAD,CACEH,GAAI,EACJtB,QAAQ,OACRuB,eAAe,UAEf,kBAAC,IAAD,CACEF,MAAM,UACNK,UAAWC,IACXC,GAAG,IACHR,QAAQ,aAJV","file":"static/js/22.f0d7289b.chunk.js","sourcesContent":["function track(...args) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      return;\r\n    }\r\n  \r\n    if (!window.gtag) {\r\n      return;\r\n    }\r\n  \r\n    window.gtag(...args);\r\n  }\r\n  \r\n  function pageview(props) {\r\n    track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\r\n  }\r\n  \r\n  function event(type, props) {\r\n    track('event', type, props);\r\n  }\r\n  \r\n  export default {\r\n    pageview,\r\n    event\r\n  };\r\n","import React, {\r\n    forwardRef,\r\n    useEffect, useCallback\r\n  } from 'react';\r\n  import { Helmet } from 'react-helmet';\r\n  import { useLocation } from 'react-router';\r\n  import PropTypes from 'prop-types';\r\n  import track from 'src/utils/analytics';\r\n  \r\n  const Page = forwardRef(({\r\n    title,\r\n    children,\r\n    ...rest\r\n  }, ref) => {\r\n    const location = useLocation();\r\n  \r\n    const sendPageViewEvent = useCallback(() => {\r\n      track.pageview({\r\n        page_path: location.pathname\r\n      });\r\n    }, [location]);\r\n  \r\n    useEffect(() => {\r\n      sendPageViewEvent();\r\n    }, [sendPageViewEvent]);\r\n  \r\n    return (\r\n      <div\r\n        ref={ref}\r\n        {...rest}\r\n      >\r\n        <Helmet>\r\n          <title>Smart CSSD - {title}</title>\r\n        </Helmet>\r\n        {children}\r\n      </div>\r\n    );\r\n  });\r\n  \r\n  Page.propTypes = {\r\n    children: PropTypes.node,\r\n    title: PropTypes.string\r\n  };\r\n  \r\n  export default Page;\r\n  ","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  useTheme,\r\n  useMediaQuery,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    minHeight: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(3),\r\n    paddingTop: 80,\r\n    paddingBottom: 80\r\n  },\r\n  image: {\r\n    maxWidth: '100%',\r\n    width: 560,\r\n    maxHeight: 300,\r\n    height: 'auto'\r\n  }\r\n}));\r\n\r\nfunction Error404View() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"404: Not found\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Typography\r\n          align=\"center\"\r\n          variant={mobileDevice ? 'h4' : 'h1'}\r\n          color=\"textPrimary\"\r\n        >\r\n          404: The page you are looking for isnâ€™t here\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          variant=\"subtitle2\"\r\n          color=\"textSecondary\"\r\n        >\r\n          You either tried some shady route or you\r\n          came here by mistake. Whichever it is, try using the navigation.\r\n        </Typography>\r\n        <Box\r\n          mt={6}\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <img\r\n            alt=\"Under development\"\r\n            className={classes.image}\r\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\r\n          />\r\n        </Box>\r\n        <Box\r\n          mt={6}\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            component={RouterLink}\r\n            to=\"/\"\r\n            variant=\"contained\"\r\n          >\r\n            Back to home\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default Error404View;"],"sourceRoot":""}