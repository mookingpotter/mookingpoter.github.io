{"version":3,"sources":["views/pages/HomeView/MenuList.js","views/pages/HomeView/MenuCheck.js","views/pages/HomeView/index.js","utils/analytics.js","components/Page.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js"],"names":["useStyles","makeStyles","theme","root","paper","padding","spacing","textAlign","mediaCard","height","backgroundRepeat","backgroundSize","MenuList","menuList","className","rest","classes","t","useTranslation","Grid","container","clsx","map","m","item","xs","sm","md","key","id","Card","CardContent","lg","Typography","variant","align","color","gutterBottom","title","name","Box","pt","Button","component","Link","to","route","size","CardMedia","image","icon","button","display","alignItems","justifyContent","buttonCheck","MenuCheck","fullWidth","backgroundColor","palette","background","default","HomeView","menuItems","Page","Container","track","window","gtag","pageview","props","process","event","type","forwardRef","ref","children","location","useLocation","sendPageViewEvent","useCallback","page_path","pathname","useEffect","Helmet","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","React","_props$alignContent","alignContent","_props$alignItems","classNameProp","_props$component","Component","_props$container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","_props$md","_props$sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","_extends","StyledGrid","withStyles","boxSizing","flexWrap","width","margin","minWidth","flexDirection","breakpoint","styles","forEach","themeSpacing","generateGutter","breakpoints","keys","reduce","accumulator","globalStyles","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","paddingBottom","_props$raised","raised","Paper","elevation","overflow","MEDIA_COMPONENTS","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","media","img","backgroundPosition","objectFit"],"mappings":"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","file":"static/js/19.836069a1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useStyles = makeStyles((theme)=> ({\r\n  root: {},\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\"\r\n  },  \r\n  mediaCard: {\r\n    height: \"100%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"auto\",\r\n  },\r\n}))\r\n\r\nconst MenuList = ({ menuList, className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation(\"home\")\r\n\r\n  return (\r\n    <Grid \r\n      container\r\n      spacing={3}\r\n      className={clsx(className, classes.root)}\r\n      {...rest}\r\n    >\r\n      {menuList.map((m) => (\r\n        <Grid \r\n          item \r\n          xs={12} sm={12} md={6} \r\n          key={m.id}\r\n        >\r\n          <Card \r\n            className={classes.paper}\r\n          >\r\n            <CardContent>\r\n              <Grid container>\r\n                <Grid \r\n                  item xs={8} sm={8} md={8} lg={8}\r\n                >\r\n                  <Typography\r\n                    variant=\"subtitle1\"\r\n                    align=\"left\"\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                  >\r\n                    {m.title}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" align=\"left\" gutterBottom>\r\n                    {m.name}\r\n                  </Typography>\r\n                  <Box align=\"left\" pt={3}>\r\n                    <Button\r\n                      component={Link}\r\n                      to={m.route}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"large\"\r\n                    >\r\n                      {t(\"button.allList\")}\r\n                    </Button>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={4} sm={4} md={4} lg={4}>\r\n                  <CardMedia\r\n                    className={classes.mediaCard}\r\n                    image={m.icon}\r\n                    title={m.title}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nMenuList.propTypes = {\r\n  menuList: PropTypes.array.isRequired,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default MenuList;","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  root: {},\r\n  button: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  buttonCheck: {\r\n    padding: \"16px 32px\",\r\n  },\r\n}))\r\n\r\nconst MenuCheck = ({ className, ...rest }) => {\r\n  const classes = useStyles();  \r\n  const { t } = useTranslation(\"home\");\r\n\r\n  return (\r\n    <Card \r\n      className={clsx(className, classes.root)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12} md={9}>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              align=\"left\"\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n            >\r\n              {t(\"containerMedicalEquipment.titleSmall\")}\r\n            </Typography>\r\n            <Typography variant=\"h6\" align=\"left\">\r\n              {t(\"containerMedicalEquipment.titleMain\")}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={3} className={classes.button}>\r\n            <Button\r\n              component={Link}\r\n              to={\"/verify\"}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth={true}\r\n              className={classes.buttonCheck}\r\n            >\r\n              {t(\"button.checkEquipment\")}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nMenuCheck.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default MenuCheck;","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Page from 'src/components/Page';\r\nimport MenuList from \"./MenuList\";\r\nimport MenuCheck from \"./MenuCheck\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n  }\r\n}));\r\n\r\nconst HomeView = () => {\r\n  const { t } = useTranslation(\"home\");\r\n  const classes = useStyles();\r\n  const menuItems = [\r\n    {\r\n      id: 1,\r\n      title: `${t(\"containerRegisterEquipment.titleSmall\")}`,\r\n      name: `${t(\"containerRegisterEquipment.titleMain\")}`,\r\n      route: \"/equipments\",\r\n      icon: `/static/home/register.png`,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: `${t(\"containerSurgicalInstruments.titleSmall\")}`,\r\n      name: `${t(\"containerSurgicalInstruments.titleMain\")}`,\r\n      route: \"/sets\",\r\n      icon: `/static/home/document.png`,\r\n    },\r\n    {\r\n      id: 3,\r\n      title: `${t(\"containerHistory.titleSmall\")}`,\r\n      name: `${t(\"containerHistory.titleMain\")}`,\r\n      route: \"/borrowing-history\",\r\n      icon: `/static/home/history.png`,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Home\">\r\n      <Container>\r\n        {/* <Box textAlign=\"center\" pt={2}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {t(\"titleMain\")}\r\n          </Typography>\r\n          <Divider />\r\n        </Box> */}\r\n        <Box pt={2}>\r\n          <MenuCheck />\r\n        </Box>\r\n        <Box pt={2}>\r\n          <MenuList menuList={menuItems} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default HomeView;\r\n","function track(...args) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      return;\r\n    }\r\n  \r\n    if (!window.gtag) {\r\n      return;\r\n    }\r\n  \r\n    window.gtag(...args);\r\n  }\r\n  \r\n  function pageview(props) {\r\n    track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\r\n  }\r\n  \r\n  function event(type, props) {\r\n    track('event', type, props);\r\n  }\r\n  \r\n  export default {\r\n    pageview,\r\n    event\r\n  };\r\n","import React, {\r\n    forwardRef,\r\n    useEffect, useCallback\r\n  } from 'react';\r\n  import { Helmet } from 'react-helmet';\r\n  import { useLocation } from 'react-router';\r\n  import PropTypes from 'prop-types';\r\n  import track from 'src/utils/analytics';\r\n  \r\n  const Page = forwardRef(({\r\n    title,\r\n    children,\r\n    ...rest\r\n  }, ref) => {\r\n    const location = useLocation();\r\n  \r\n    const sendPageViewEvent = useCallback(() => {\r\n      track.pageview({\r\n        page_path: location.pathname\r\n      });\r\n    }, [location]);\r\n  \r\n    useEffect(() => {\r\n      sendPageViewEvent();\r\n    }, [sendPageViewEvent]);\r\n  \r\n    return (\r\n      <div\r\n        ref={ref}\r\n        {...rest}\r\n      >\r\n        <Helmet>\r\n          <title>Smart CSSD - {title}</title>\r\n        </Helmet>\r\n        {children}\r\n      </div>\r\n    );\r\n  });\r\n  \r\n  Page.propTypes = {\r\n    children: PropTypes.node,\r\n    title: PropTypes.string\r\n  };\r\n  \r\n  export default Page;\r\n  ","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);"],"sourceRoot":""}