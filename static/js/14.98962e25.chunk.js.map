{"version":3,"sources":["utils/analytics.js","components/Page.js","services/response.js","hooks/useIsMountedRef.js","utils/filters.js","components/Label.js","services/setsService.js","components/BackToMainPageButton.js","components/PageName.js","services/pagingService.js","components/MoreButton.js","components/dialog/DeleteConfirm.js","views/sets/ListView/Header/Filter.js","views/sets/ListView/Header/index.js","views/sets/ListView/Results/Sorting.js","views/sets/ListView/Results/SetCard.js","views/sets/ListView/Results/index.js","views/sets/ListView/Paging.js","views/sets/ListView/index.js"],"names":["track","window","gtag","pageview","props","process","event","type","Page","forwardRef","ref","title","children","rest","location","useLocation","sendPageViewEvent","useCallback","page_path","pathname","useEffect","Helmet","initError","errorCode","errorMessage","activityId","resultFlag","accessResponse","response","value","data","accessError","error","status","statusText","headers","request","console","message","useIsMountedRef","isMounted","useRef","current","operators","equals","notEquals","greaterThan","greaterThanOrEquals","lessThan","lessThanOrEquals","contains","startWith","initFilter","field","operator","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","success","warning","Label","className","style","classes","clsx","defaultProps","setsService","getAll","Promise","resolve","reject","axios","get","then","result","handleResponse","catch","getById","setId","params","id","equipments","allIds","Object","keys","byId","getList","filter","sort","page","pageSize","customFilter","insert","dataItem","log","post","update","put","remove","delete","updateEquipmentItems","equipmentItems","lastModifiedTimestamp","textDecoration","BackToMainPageButton","t","useTranslation","TRANSLATE_NS","TRANSLATIONS","component","RouterLink","to","prototype","PropTypes","string","memo","common","white","PageName","variant","pagingService","sortOptions","label","applyFilters","dataItems","query","filterPropertiesBy","matches","containsQuery","forEach","property","toLowerCase","includes","applyPagination","limit","take","slice","descendingComparator","a","b","orderBy","getComparator","order","applySort","split","comparator","stabilizedThis","map","el","index","menu","maxWidth","MoreButton","buttonList","moreRef","useState","openMenu","setOpenMenu","onClick","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","btn","buttonItem","click","key","uid","icon","translateKey","dialogTitle","DeleteConfirmationDialog","getMessage","other","useTheme","fullScreen","useMediaQuery","breakpoints","down","React","dialogId","uuidv4","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","alignSelf","ml","dividers","i18nKey","values","itemName","autoFocus","queryButton","marginLeft","marginRight","queryDivider","margin","queryCard","minHeight","queryField","width","Filter","onSearch","SETS","inputValue","setInputValue","handleSearch","persist","Container","Card","Box","TextField","fullWidth","onChange","target","size","Divider","orientation","flexItem","Hidden","smDown","Button","only","IconButton","background","header","actionIcon","previousButton","titleRow","paddingTop","text","addButton","addIconButton","searchWrapper","zIndex","drawer","marginTop","Header","Grid","container","justify","item","pt","flexWrap","up","sortByField","sortButton","displayItemCounts","Sorting","itemCounts","onSortChange","onModeChange","setSort","mode","setMode","Typography","name","select","SelectProps","native","option","mdDown","ToggleButtonGroup","exclusive","ToggleButton","withWidth","SetCard","loading","set","onRemove","history","useHistory","settingButtons","url","push","CardHeader","Skeleton","animation","data-testid","action","pb","px","marginBottom","description","py","active","sortWrapper","Results","sets","obj","md","sm","xs","Paging","count","onChangePage","onChangeRowsPerPage","pageSizes","PAGING","PAGE_SIZES","displayPage","TablePagination","newPage","rowsPerPage","rowsPerPageOptions","labelRowsPerPage","nextIconButtonText","backIconButtonText","PAGE","PAGE_SIZE","default","content","SurgicalSetListView","setLoading","setSets","defaultPaging","setPage","setLimit","setQuery","openDeleteConfirm","setOpenDeleteConfirm","currentDataItem","enqueueSnackbar","useSnackbar","confirmRemove","getSetsFromApi","mt","total","DeleteConfirm","isDelete"],"mappings":"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","file":"static/js/14.98962e25.chunk.js","sourcesContent":["function track(...args) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      return;\r\n    }\r\n  \r\n    if (!window.gtag) {\r\n      return;\r\n    }\r\n  \r\n    window.gtag(...args);\r\n  }\r\n  \r\n  function pageview(props) {\r\n    track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\r\n  }\r\n  \r\n  function event(type, props) {\r\n    track('event', type, props);\r\n  }\r\n  \r\n  export default {\r\n    pageview,\r\n    event\r\n  };\r\n","import React, {\r\n    forwardRef,\r\n    useEffect, useCallback\r\n  } from 'react';\r\n  import { Helmet } from 'react-helmet';\r\n  import { useLocation } from 'react-router';\r\n  import PropTypes from 'prop-types';\r\n  import track from 'src/utils/analytics';\r\n  \r\n  const Page = forwardRef(({\r\n    title,\r\n    children,\r\n    ...rest\r\n  }, ref) => {\r\n    const location = useLocation();\r\n  \r\n    const sendPageViewEvent = useCallback(() => {\r\n      track.pageview({\r\n        page_path: location.pathname\r\n      });\r\n    }, [location]);\r\n  \r\n    useEffect(() => {\r\n      sendPageViewEvent();\r\n    }, [sendPageViewEvent]);\r\n  \r\n    return (\r\n      <div\r\n        ref={ref}\r\n        {...rest}\r\n      >\r\n        <Helmet>\r\n          <title>Smart CSSD - {title}</title>\r\n        </Helmet>\r\n        {children}\r\n      </div>\r\n    );\r\n  });\r\n  \r\n  Page.propTypes = {\r\n    children: PropTypes.node,\r\n    title: PropTypes.string\r\n  };\r\n  \r\n  export default Page;\r\n  ","export const initError = ({errorCode, errorMessage, activityId}) => {\r\n  const displayErrorCode =  errorCode ?? \"something went wrong\"\r\n  const displayActivityId = activityId ?? \"\"\r\n  return { \r\n    resultFlag: false, \r\n    errorCode: displayErrorCode,\r\n    errorMessage: errorMessage,\r\n    activityId: displayActivityId\r\n  }\r\n}\r\n\r\nexport const initResult = (value) => {\r\n  if(value) \r\n    return { resultFlag: true, value: {...value} }\r\n  else\r\n    return { resultFlag: true }\r\n}\r\n\r\nexport const accessResponse = (response) => {\r\n  const { data, /*status, statusText, headers, config, request*/ } = response\r\n  //console.log(response)\r\n  const result = initResult(data)\r\n  //console.log('result: ', result)\r\n  return result\r\n}\r\n\r\nexport const accessError = (error) => {\r\n  if(error.response){\r\n    // The request was made and the server responded with a status code\r\n    // that falls out of the range of 2xx\r\n    const { data, status, statusText, headers } = error.response\r\n    // console.log(\"---------------------------------\")\r\n    // console.log(status)\r\n    // console.log(data)\r\n    // console.log(headers)\r\n    // console.log(\"---------------------------------\")\r\n\r\n    if(!data){\r\n      const result = initError({ errorMessage: `${status}: ${statusText}` })\r\n      return result\r\n    }\r\n    else{\r\n      const result = initError(data)\r\n      return result\r\n    }\r\n  }\r\n  else if(error.request){\r\n    // The request was made but no response was received\r\n    // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n    // http.ClientRequest in node.js\r\n    console.error(error.request)\r\n    debugger\r\n    console.error(`Error: `, error.message)\r\n    \r\n    const result = initError({ errorMessage: error.message })\r\n    return result\r\n  }\r\n  else{\r\n    // Something happened in setting up the request that triggered an Error\r\n    console.error(`Error: `, error.message)\r\n    \r\n    const result = initError({ errorMessage: error.message })\r\n    return result\r\n  }\r\n}","import { useRef, useEffect } from 'react';\r\n\r\nexport default function useIsMountedRef() {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => () => {\r\n    isMounted.current = false;\r\n  }, []);\r\n\r\n  return isMounted;\r\n}\r\n","export const operators = {\r\n  equals: \"eq\",\r\n  notEquals: \"neq\",\r\n  greaterThan: \"gt\",\r\n  greaterThanOrEquals: \"gte\",\r\n  lessThan: \"lt\",\r\n  lessThanOrEquals: \"lte\",\r\n  contains: \"ct\",\r\n  startWith: \"st\"\r\n}\r\n\r\nexport const logic = {\r\n  and: \"and\",\r\n  or: \"or\"\r\n}\r\n\r\nexport const initFilter = ({field, operator = operators.contains, value = \"\"}) => {\r\n  if(!field) return null  \r\n  else  return { field, operator, value }\r\n}\r\n\r\nexport const initFilters = ({logic = \"and\", filters = []}) => {\r\n  return { logic, filters }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { fade, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        fontFamily: theme.typography.fontFamily,\r\n        alignItems: 'center',\r\n        borderRadius: 2,\r\n        display: 'inline-flex',\r\n        flexGrow: 0,\r\n        whiteSpace: 'nowrap',\r\n        cursor: 'default',\r\n        flexShrink: 0,\r\n        fontSize: theme.typography.pxToRem(12),\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n        height: 20,\r\n        justifyContent: 'center',\r\n        letterSpacing: 0.5,\r\n        minWidth: 20,\r\n        padding: theme.spacing(0.5, 1),\r\n        textTransform: 'uppercase',\r\n    },\r\n    primary: {\r\n        color: theme.palette.primary.main,\r\n        backgroundColor: fade(theme.palette.primary.main, 0.08)\r\n    },\r\n    secondary: {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: fade(theme.palette.secondary.main, 0.08)\r\n    },\r\n    error: {\r\n        color: theme.palette.error.main,\r\n        backgroundColor: fade(theme.palette.error.main, 0.08)\r\n    },\r\n    success: {\r\n        color: theme.palette.success.main,\r\n        backgroundColor: fade(theme.palette.success.main, 0.08)\r\n    },\r\n    warning: {\r\n        color: theme.palette.warning.main,\r\n        backgroundColor: fade(theme.palette.warning.main, 0.08)\r\n    }\r\n}));\r\n\r\nfunction Label({\r\n  className,\r\n  color,\r\n  children,\r\n  style,\r\n  ...rest\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <span\r\n      className={\r\n        clsx(classes.root, {\r\n          [classes[color]]: color\r\n        }, className)\r\n      }\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </span>\r\n  );\r\n}\r\n\r\nLabel.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    style: PropTypes.object,\r\n    color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\r\n  };\r\n  \r\n  Label.defaultProps = {\r\n    className: '',\r\n    color: 'secondary'\r\n  };\r\n  \r\n  export default Label;  ","import axios from 'src/utils/axios'\r\nimport { initFilter } from 'src/utils/filters'\r\nimport * as handleResponse from './response'\r\n\r\nclass SetsService {\r\n\r\n  getAll = () => new Promise((resolve, reject) => {\r\n    axios.get('/api/surgeries/types')\r\n      .then((response)=> {\r\n        const result = handleResponse.accessResponse(response)\r\n        resolve(result)\r\n      })\r\n      .catch((error) => {\r\n        const result =  handleResponse.accessError(error)\r\n        reject(result)\r\n      })\r\n  })  \r\n\r\n  getById = (setId) => new Promise((resolve, reject) => {    \r\n    axios\r\n      .get(`/api/surgeries/types/set/${setId}`, {\r\n        params: { id: setId }\r\n      })\r\n      .then((response)=> {\r\n        const result = handleResponse.accessResponse(response)\r\n        if(result.value && result.value.equipments){\r\n\r\n          const allIds = Object.keys(result.value.equipments.byId)\r\n          result.value.equipments[\"allIds\"] = allIds\r\n          resolve(result)\r\n        }\r\n        else {\r\n          resolve(result)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        const result =  handleResponse.accessError(error)\r\n        reject(result)\r\n      })\r\n  })\r\n\r\n  getList = (filter, sort, page, pageSize) => new Promise((resolve, reject) => {\r\n    const customFilter = filter && filter !== \"\" \r\n      ? initFilter({ field: \"name\", value: filter })\r\n      : \"\"\r\n    \r\n    axios.get('/api/surgeries/types', { params: { \r\n      filter: customFilter, \r\n      sort, \r\n      page, \r\n      pageSize } \r\n    })\r\n      .then((response)=> {\r\n        const result = handleResponse.accessResponse(response)\r\n        resolve(result)\r\n      })\r\n      .catch((error) => {\r\n        const result =  handleResponse.accessError(error)\r\n        reject(result)\r\n      })\r\n  })\r\n\r\n  insert = (dataItem) => new Promise((resolve, reject) => {\r\n    console.log('insert: ', dataItem)\r\n    axios.post('/api/surgeries/types', dataItem)\r\n      .then((response)=> {\r\n        const result = handleResponse.accessResponse(response)\r\n        resolve(result)\r\n      })\r\n      .catch((error) => {\r\n        const result =  handleResponse.accessError(error)\r\n        reject(result)\r\n      })\r\n  })\r\n\r\n  update = (dataItem) => new Promise((resolve, reject) => {\r\n    axios.put('/api/surgeries/types', dataItem) \r\n      .then((response)=> {\r\n        const result = handleResponse.accessResponse(response)\r\n        resolve(result)\r\n      })\r\n      .catch((error) => {\r\n        const result =  handleResponse.accessError(error)\r\n        reject(result)\r\n      })\r\n  })\r\n\r\n  remove = (dataItem) => new Promise((resolve, reject) => {\r\n\r\n    console.log('remove: ', dataItem)\r\n\r\n    axios.delete(`/api/surgeries/types/${dataItem.id}`, {\r\n      ...dataItem\r\n    })\r\n      .then((response)=> {\r\n        console.log(response)\r\n        const result = handleResponse.accessResponse(response)\r\n        resolve(result)\r\n      })\r\n      .catch((error) => {\r\n        const result =  handleResponse.accessError(error)\r\n        reject(result)\r\n      })\r\n  })\r\n\r\n  updateEquipmentItems = ({ setId, equipmentItems, lastModifiedTimestamp }) => new Promise((resolve, reject) => {\r\n    \r\n    axios.put(`/api/surgeries/types/set/${setId}`, {\r\n      id: setId, \r\n      lastModifiedTimestamp: lastModifiedTimestamp,\r\n      equipments: equipmentItems /* { equipmentId: amount } */\r\n    })\r\n      .then((response)=> {\r\n        const result = handleResponse.accessResponse(response)\r\n        resolve(result)\r\n      })\r\n      .catch((error) => {\r\n        const result =  handleResponse.accessError(error)\r\n        reject(result)\r\n      })\r\n  })\r\n}\r\n\r\nconst setsService = new SetsService()\r\n\r\nexport default setsService","import React, { memo } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { TRANSLATE_NS } from 'src/constants';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { makeStyles, Button } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1.2),\r\n    textDecoration: 'underline'\r\n  }\r\n}));\r\n\r\nfunction BackToMainPageButton({ className, ...rest }) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation([TRANSLATE_NS.TRANSLATIONS]);\r\n\r\n  return (\r\n    <Button\r\n      component={RouterLink}\r\n      to=\"/\"\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      {t('back to main page')}\r\n    </Button>\r\n  );\r\n}\r\n\r\nBackToMainPageButton.prototype = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default memo(BackToMainPageButton);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nfunction PageName({ children, className, ...rest }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Typography\r\n      variant=\"h3\"\r\n      className={clsx(className, classes.root)}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPageName.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PageName;\r\n","class PagingService {\r\n  sortOptions = [\r\n    {\r\n        value: 'name|asc',\r\n        label: 'Name (Ascending A to Z)'\r\n    },\r\n    {\r\n        value: 'name|desc', \r\n        label: 'Name (Descending Z to A)'\r\n    }\r\n  ]\r\n\r\n  applyFilters = (dataItems, query, filterPropertiesBy) => {\r\n    return dataItems.filter((dataItem) => {\r\n      let matches = true\r\n      \r\n      if(query){\r\n        //const properties = ['name']\r\n        let containsQuery = false\r\n\r\n        filterPropertiesBy.forEach((property) => {\r\n          if(dataItem[property].toLowerCase().includes(query.toLowerCase())){\r\n            containsQuery = true\r\n          }\r\n        })\r\n\r\n        if(!containsQuery){\r\n          matches = false\r\n        }\r\n      }\r\n      return matches\r\n    })\r\n  }\r\n\r\n  applyPagination = (dataItems, page, limit) => {\r\n    const take = page - 1\r\n    return dataItems.slice(take * limit, take * limit + limit)\r\n  }\r\n\r\n  descendingComparator = (a, b, orderBy) => {\r\n    if(b[orderBy] < a[orderBy]){\r\n      return -1\r\n    }\r\n\r\n    if(b[orderBy] > a[orderBy]){\r\n      return 1\r\n    }\r\n\r\n    return 0\r\n  }\r\n\r\n  getComparator = (order, orderBy) => {\r\n    return order === 'desc'\r\n      ? (a, b) => this.descendingComparator(a, b, orderBy)\r\n      : (a, b) => -this.descendingComparator(a, b, orderBy)\r\n  }\r\n\r\n  applySort = (dataItems, sort) => {\r\n    const [orderBy, order] = sort.split('|')\r\n    const comparator = this.getComparator(order, orderBy)\r\n    const stabilizedThis = dataItems.map((el, index) => [el, index])\r\n\r\n    stabilizedThis.sort((a, b) => {\r\n      //eslint-disable-next-line no-shadow\r\n      const order = comparator(a[0], b[0])\r\n\r\n      if(order !== 0) return order\r\n\r\n      return a[1] - b[1]\r\n    })\r\n\r\n    return stabilizedThis.map((el) => el[0])\r\n  }\r\n}\r\n\r\nconst pagingService = new PagingService()\r\n\r\nexport default pagingService","import React, {\r\n    useRef,\r\n    useState,\r\n    memo\r\n  } from 'react';\r\n  import PropTypes from 'prop-types';\r\n  import {\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Tooltip,\r\n    IconButton,\r\n    Menu,\r\n    MenuItem,\r\n    makeStyles\r\n  } from '@material-ui/core';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { TRANSLATE_NS } from 'src/constants';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {uid} from \"react-uid\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  menu: {\r\n    //width: 160,\r\n    maxWidth: '100%'\r\n  }\r\n}));\r\n\r\nfunction MoreButton({ buttonList, ...rest }) {\r\n  const classes = useStyles();\r\n  const moreRef = useRef(null);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const {t} = useTranslation([TRANSLATE_NS.TRANSLATIONS])\r\n\r\n  const handleMenuOpen = () => {\r\n    setOpenMenu(true);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  const handleItemClick = (buttonItem) => {\r\n    if(typeof buttonItem.click === \"function\") {\r\n      buttonItem.click();\r\n      setOpenMenu(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title={t('translations:more options')}>\r\n        <IconButton\r\n          {...rest}\r\n          onClick={handleMenuOpen}\r\n          ref={moreRef}\r\n        >\r\n          <MoreIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu\r\n        anchorEl={moreRef.current}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left'\r\n        }}\r\n        onClose={handleMenuClose}\r\n        open={openMenu}\r\n        PaperProps={{ className: classes.menu }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left'\r\n        }}\r\n      >\r\n        {\r\n          buttonList && buttonList.map((btn)=> {\r\n            return (\r\n              <MenuItem \r\n                onClick={()=> handleItemClick(btn)} \r\n                key={uid(btn)} \r\n                value={btn}\r\n              >\r\n                <ListItemIcon>\r\n                  {btn.icon}\r\n                </ListItemIcon>\r\n                <ListItemText primary={t(btn.translateKey)} />\r\n              </MenuItem>\r\n            );\r\n          })\r\n        }\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nMoreButton.propTypes = {\r\n  className: PropTypes.string,\r\n  buttonList: PropTypes.array.isRequired\r\n};\r\n\r\nMoreButton.defaultProps = {\r\n  className: '',\r\n  buttonList: []\r\n};\r\n\r\nexport default memo(MoreButton);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport { TRANSLATE_NS } from 'src/constants';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { DialogContentText, SvgIcon, useMediaQuery, Box } from '@material-ui/core';\r\nimport { Trash2 as DeleteIcon } from 'react-feather';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n\r\n  },\r\n  dialogTitle: {\r\n    \"& h2\": {\r\n      display: 'flex'\r\n    }\r\n  }\r\n}));\r\n\r\nfunction DeleteConfirmationDialog(props) {\r\n  const { onClose, open, getMessage, ...other } = props;\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const {t} = useTranslation([TRANSLATE_NS.TRANSLATIONS]);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n    }\r\n  }, [open]);\r\n\r\n  const handleCancel = () => {\r\n    onClose(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    onClose(true);\r\n  };\r\n  \r\n  let message = \"\";\r\n  if(getMessage){\r\n    const result = getMessage();\r\n    if(result) message = result;\r\n  }\r\n\r\n  const dialogId = uuidv4();\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={fullScreen}\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      aria-labelledby={dialogId}\r\n      open={open}\r\n      {...other}\r\n    >\r\n      <DialogTitle id={dialogId} className={classes.dialogTitle}>\r\n        <SvgIcon>\r\n          <DeleteIcon fontSize=\"small\" />\r\n        </SvgIcon>\r\n        <Box \r\n          alignSelf=\"center\"\r\n          component=\"span\"\r\n          ml={1}\r\n        >\r\n          {t(\"translations:delete title dialog\")}\r\n        </Box>\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <DialogContentText>\r\n          <Trans i18nKey=\"are you sure you want to remove\"values={{itemName: message}}></Trans>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleCancel} color=\"primary\">\r\n          {t(\"translations:cancel\")}\r\n        </Button>\r\n        <Button autoFocus onClick={handleOk} color=\"primary\">\r\n          {t(\"translations:yes\")}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nDeleteConfirmationDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  getMessage: PropTypes.func\r\n};\r\n\r\nexport default DeleteConfirmationDialog;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useState } from 'react';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport { TRANSLATE_NS } from 'src/constants';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Divider,\r\n  TextField,\r\n  makeStyles,\r\n  Hidden,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  root: {},  \r\n  queryButton: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(3),\r\n  },\r\n  queryDivider: {\r\n    margin: theme.spacing(0, 3),\r\n  },\r\n  queryCard: {\r\n    minHeight: 60,\r\n    borderRadius: theme.spacing(1),\r\n    padding: theme.spacing(2),    \r\n  },\r\n  queryField: {\r\n    width: '95%',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nfunction Filter({onSearch, className, ...rest}){\r\n  const classes = useStyles();\r\n  const {t} = useTranslation([TRANSLATE_NS.SETS, TRANSLATE_NS.TRANSLATIONS]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  \r\n  const handleQueryChange = (event) => {\r\n    event.persist();\r\n    setInputValue(event.target.value);\r\n  }\r\n  const handleSearch = (event) => {\r\n    event.persist();\r\n    onSearch(inputValue);\r\n  }\r\n\r\n  return (\r\n    <Container \r\n      maxWidth=\"md\"\r\n      className={clsx(className, classes.root)}\r\n      {...rest}\r\n    >\r\n      <Card\r\n        className={classes.queryCard}\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <TextField\r\n            fullWidth={true}\r\n            className={classes.queryField}              \r\n            onChange={handleQueryChange}\r\n            value={inputValue}              \r\n            size=\"small\"\r\n            label={t('sets:surgical type list search')}\r\n          />       \r\n          <Divider\r\n            orientation=\"vertical\"\r\n            flexItem\r\n            className={classes.queryDivider}\r\n          />\r\n          <Hidden smDown>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.queryButton}\r\n              //size=\"small\"\r\n              onClick={handleSearch}\r\n            >\r\n              <SearchIcon />\r\n              {t('translations:search')}\r\n            </Button>\r\n          </Hidden>\r\n          <Hidden only={[\"md\", \"lg\", \"xl\"]}>            \r\n            <IconButton \r\n              color=\"primary\"             \r\n              onClick={handleSearch}\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </Hidden>\r\n        </Box>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onSearch: PropTypes.func.isRequired,\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { Box, Button, Grid, makeStyles, Container } from '@material-ui/core';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport { TRANSLATE_NS } from 'src/constants';\r\nimport { useTranslation } from 'react-i18next';\r\nimport BackToMainPageButton from 'src/components/BackToMainPageButton';\r\nimport PageName from 'src/components/PageName';\r\nimport Filter from './Filter';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    minWidth: '100%',\r\n    height: 130,\r\n    background: theme.palette.background.header\r\n  },\r\n  actionIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  previousButton: {\r\n    '&:hover': {\r\n      textDecoration: 'underline'\r\n    }\r\n  },\r\n  titleRow: {\r\n    paddingTop: theme.spacing(1),\r\n    color: theme.palette.text.primary\r\n  },\r\n  addButton: {},\r\n  addIconButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  searchWrapper: {\r\n    zIndex: theme.zIndex.drawer + 100,\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction Header({ onSearch, className, ...rest }) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation([TRANSLATE_NS.TRANSLATIONS, TRANSLATE_NS.SETS]);\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Container maxWidth=\"md\">\r\n        <Grid\r\n          alignItems=\"center\"\r\n          container\r\n          justify=\"space-between\"\r\n          className={classes.titleRow}\r\n        >\r\n          <Grid item>\r\n            <PageName>{t('sets:surgical instrument sets')}</PageName>\r\n          </Grid>\r\n          <Grid item>\r\n            <BackToMainPageButton className={classes.previousButton} />\r\n          </Grid>\r\n        </Grid>\r\n        <Box pt={1}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            //onClick={handleAddNewItem}\r\n            className={classes.addButton}\r\n            size=\"small\"\r\n            component={RouterLink}\r\n            to=\"/sets/create\"\r\n          >\r\n            <AddCircleOutlineOutlinedIcon className={classes.addIconButton} />\r\n            {t('sets:add surgical instrument sets')}\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n      <Filter onSearch={onSearch} className={classes.searchWrapper} />\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  onSearch: PropTypes.func,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n  withWidth,\r\n  Hidden,\r\n} from '@material-ui/core';\r\nimport pagingService from 'src/services/pagingService';\r\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';import {\r\n  ToggleButtonGroup,\r\n  ToggleButton,\r\n} from '@material-ui/lab';\r\nimport {TRANSLATE_NS} from 'src/constants';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles((theme)=> ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',    \r\n    justifyContent: \"center\",\r\n    [theme.breakpoints.up(\"md\")]: {   \r\n      justifyContent: \"space-between\",\r\n    },\r\n  },\r\n  sortByField: {\r\n    marginRight: theme.spacing(1)\r\n  },  \r\n  sortButton: {\r\n    textTransform: 'none',\r\n    letterSpacing: 0,\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  displayItemCounts: {\r\n\r\n  }\r\n}));\r\n\r\nfunction Sorting({itemCounts, onSortChange, onModeChange, className, ...rest}){        \r\n  const classes = useStyles();\r\n  const {t} = useTranslation([TRANSLATE_NS.TRANSLATIONS, TRANSLATE_NS.SETS]);\r\n  const sortOptions = pagingService.sortOptions;  \r\n  const [sort, setSort] = useState(sortOptions[0].value);\r\n  const [mode, setMode] = useState('grid');\r\n\r\n  const handleSortChange = (event) => {\r\n    event.persist();\r\n    setSort(event.target.value);\r\n    onSortChange(event.target.value);\r\n  }\r\n  const handleModeChange = (event, value) => {\r\n    event.persist();\r\n    setMode(value);\r\n    onModeChange(value);\r\n  }\r\n  \r\n  return(\r\n    <Box\r\n      className={clsx(className, classes.root)}\r\n      {...rest}\r\n    >\r\n      <Hidden smDown>\r\n        <Box \r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography\r\n            className={classes.displayItemCounts}\r\n            variant=\"h5\"\r\n            color=\"textPrimary\"\r\n          >\r\n            {`${t('translations:showing')} ${itemCounts} ${t('sets:surgical instrument sets')}`}\r\n          </Typography>\r\n        </Box>\r\n      </Hidden>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n      >\r\n        <TextField\r\n          label={t('translations:sort by')}\r\n          name=\"sort\"\r\n          onChange={handleSortChange}\r\n          select\r\n          SelectProps={{ native: true }}\r\n          value={sort}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          className={classes.sortByField}\r\n        >\r\n          {sortOptions.map((option) => (\r\n          <option\r\n              key={option.value}\r\n              value={option.value}\r\n          >\r\n              {option.label}\r\n          </option>\r\n          ))}\r\n        </TextField>\r\n        <Hidden\r\n          mdDown\r\n        >          \r\n          <Box flexGrow={1} />\r\n          <ToggleButtonGroup\r\n            exclusive\r\n            onChange={handleModeChange}\r\n            size=\"small\"\r\n            value={mode}\r\n          >\r\n            <ToggleButton value=\"grid\">\r\n              <ViewModuleIcon color=\"primary\"/>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Hidden>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nSorting.propTypes = {   \r\n  itemCounts: PropTypes.number,\r\n  onSortChange: PropTypes.func, \r\n  onModeChange: PropTypes.func,\r\n  className: PropTypes.string,\r\n  width: PropTypes.oneOf([\"lg\", \"md\", \"sm\", \"xl\", \"xs\"]).isRequired,\r\n};\r\n\r\nSorting.defaultProps = {\r\n  itemCounts: 0,\r\n  onSortChange: () => {},\r\n  onModeChange: () => {},\r\n  className: ''\r\n};\r\n\r\nexport default withWidth()(Sorting);","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  CardHeader\r\n} from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { TRANSLATE_NS } from 'src/constants';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport { Edit2 as EditIcon, Trash2 as DeleteIcon } from 'react-feather';\r\nimport Label from 'src/components/Label';\r\nimport MoreButton from 'src/components/MoreButton';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    minWidth: 178\r\n  }\r\n}));\r\n\r\nfunction SetCard({ loading, set: dataItem, onRemove, className, ...rest }) {\r\n  const classes = useStyles();\r\n  const {t} = useTranslation([TRANSLATE_NS.SETS, TRANSLATE_NS.TRANSLATIONS]);\r\n  const history = useHistory();\r\n\r\n  const settingButtons = [\r\n  {\r\n    translateKey: \"edit\",\r\n    click: () => {\r\n      const url = `/sets/${dataItem.id}`;\r\n      history.push(url);\r\n    },\r\n    icon: <EditIcon />\r\n  },\r\n  {\r\n    translateKey: \"delete\",\r\n    click: () => {\r\n      if(onRemove){\r\n        onRemove(dataItem);\r\n      }\r\n    },\r\n    icon: <DeleteIcon />\r\n  }\r\n  ];\r\n\r\n  const handleClickViewDetailsButton = (event) => {\r\n    event.persist();\r\n    const url = `/sets/details/${dataItem.id}`\r\n    history.push(url)\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader \r\n        title={\r\n          loading ? (\r\n            <Skeleton animation=\"wave\" variant=\"text\" data-testid=\"skeleton-title\"></Skeleton>\r\n          ) : (\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              {dataItem.name}\r\n            </Typography>\r\n          )\r\n        }\r\n        action={\r\n          loading ? null : (<MoreButton buttonList={settingButtons} />)\r\n        }\r\n      />\r\n      <Box\r\n        pb={1}\r\n        px={3}\r\n      >\r\n        {loading ? (\r\n          <div data-testid=\"skeleton-details\">\r\n            <Skeleton animation=\"wave\" height={15} style={{marginBottom: 6}} />\r\n            <Skeleton animation=\"wave\" height={10} width=\"80%\" style={{marginBottom: 6}} />\r\n            <Skeleton animation=\"wave\" height={10} width=\"80%\" style={{marginBottom: 6}} />\r\n            <Skeleton animation=\"wave\" height={10} width=\"90%\" />\r\n          </div>\r\n        ) : (\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"body2\"\r\n          >\r\n            {dataItem.description}\r\n          </Typography>\r\n        )\r\n        }\r\n      </Box>\r\n      <Box\r\n        py={2}\r\n        px={2}\r\n      >\r\n        <Grid\r\n          alignItems=\"center\"\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={2}\r\n        >\r\n          <Grid item>\r\n            {loading ? (\r\n              <div data-testid=\"skeleton-view-details-button\">\r\n                <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n              </div>\r\n              ) : (\r\n              <>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={handleClickViewDetailsButton}\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n              >\r\n                {t('sets:view surgical type list')}\r\n              </Button>              \r\n              </>\r\n            )}\r\n          </Grid>\r\n          <Grid item>\r\n            {loading ? ( \r\n              <div data-testid=\"skeleton-mode-label\">\r\n                <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n              </div>\r\n            ):(\r\n              <Label color={dataItem.active === true? \"success\": \"error\"}>\r\n                {dataItem.active === true ? t(\"translations:active\") : t(\"translations:inactive\")}\r\n              </Label>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n\r\nSetCard.propTypes = {\r\n  className: PropTypes.string,\r\n  set: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    description: PropTypes.string,\r\n    active: PropTypes.bool\r\n  }),\r\n  loading: PropTypes.bool,\r\n  onRemove: PropTypes.func\r\n};\r\n\r\nexport default SetCard;","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport clsx from 'clsx'\r\nimport {\r\n  makeStyles,\r\n  Grid\r\n} from '@material-ui/core'\r\nimport Sorting from './Sorting'\r\nimport SetCard from './SetCard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  sortWrapper: {\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}))\r\n\r\nfunction Results({ \r\n  loading,\r\n  sets, \r\n  itemCounts,   \r\n  limit,\r\n  onSortChange,\r\n  onRemove,\r\n  className, \r\n  ...rest }) {\r\n\r\n  const classes = useStyles()\r\n  const [mode, setMode] = useState('grid')\r\n\r\n  const handleModeChange = (value) => {\r\n    setMode(value)\r\n  }\r\n\r\n  if(loading === true){\r\n    var obj = [] \r\n    for(var index = 0, total = 8; index < total; index++) \r\n      obj.push({ id: uuidv4() })\r\n\r\n    sets = [...obj]\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Sorting \r\n        itemCounts={itemCounts}\r\n        onSortChange={onSortChange} \r\n        onModeChange={handleModeChange}\r\n        className={classes.sortWrapper}\r\n      />\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n      >\r\n        {sets.map((set) => (\r\n          <Grid\r\n            item\r\n            key={set.id}\r\n            md={mode === 'grid' ? 3 : 12}\r\n            sm={mode === 'grid' ? 6 : 12}\r\n            xs={12}\r\n          >\r\n            <SetCard set={set} loading={loading} onRemove={onRemove} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>      \r\n    </div>\r\n  )\r\n}\r\n\r\nResults.propTypes = {\r\n  loading: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  itemCounts: PropTypes.number,\r\n  limit: PropTypes.number,\r\n  sets: PropTypes.array.isRequired,\r\n  onSortChange: PropTypes.func,\r\n  onRemove: PropTypes.func\r\n}\r\n\r\nResults.defaultProps = {\r\n  loading: true,\r\n  itemCounts: 0,\r\n  limit: 0,\r\n  sets: [],\r\n  onSortChange: () => {},\r\n  className: '',\r\n  onRemove: ()=> {}\r\n}\r\n\r\nexport default Results","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport {\r\n  Box,\r\n  makeStyles,\r\n  TablePagination,\r\n} from '@material-ui/core'\r\nimport {PAGING} from 'src/constants'\r\nimport {TRANSLATE_NS} from 'src/constants'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst useStyles = makeStyles((theme)=> ({\r\n  root: {}\r\n}))\r\n\r\nfunction Paging({\r\n  page,\r\n  limit,\r\n  count,\r\n  onChangePage,\r\n  onChangeRowsPerPage,\r\n  className, \r\n  ...rest}){\r\n        \r\n  const classes = useStyles()\r\n  const {t} = useTranslation([TRANSLATE_NS.TRANSLATIONS, TRANSLATE_NS.SETS])\r\n  const pageSizes = PAGING.PAGE_SIZES\r\n  \r\n  const handleLimitChange = (event) => {\r\n    event.persist()\r\n    onChangeRowsPerPage(event.target.value)\r\n  }\r\n  const handlePageChange = (event, newPage) => {\r\n    event.persist()\r\n    onChangePage(newPage + 1)\r\n  }\r\n\r\n  const displayPage = page -1 // default the start page is 0\r\n\r\n  return(\r\n    <Box\r\n      className={clsx(className, classes.root)}\r\n      {...rest}\r\n      \r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={count}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={displayPage}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={pageSizes}\r\n        labelRowsPerPage={t('translations:rows per page')}\r\n        nextIconButtonText={t('translations:next page')}\r\n        backIconButtonText={t('translations:previous page')}\r\n      />\r\n    </Box>\r\n  )\r\n}\r\n\r\nPaging.propTypes = {\r\n  page: PropTypes.number.isRequired,\r\n  limit: PropTypes.number.isRequired,\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  onChangeRowsPerPage: PropTypes.func.isRequired,\r\n  className: PropTypes.string\r\n}\r\n\r\nPaging.defaultProps = {\r\n  page: PAGING.PAGE,\r\n  limit: PAGING.PAGE_SIZE,\r\n  count: 0,\r\n  onChangePage: () => {},\r\n  onChangeRowsPerPage: () => {},\r\n  className: ''\r\n}\r\n\r\nexport default Paging\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport {useTranslation} from \"react-i18next\"\r\nimport { TRANSLATE_NS, PAGING as defaultPaging } from 'src/constants'\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef'\r\nimport setsService from 'src/services/setsService'\r\nimport Page from 'src/components/Page'\r\n//import SplashScreen from 'src/components/SplashScreen'\r\nimport Header from './Header'\r\nimport Results from './Results'\r\nimport Paging from './Paging'\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack'\r\nimport DeleteConfirmationDialog from 'src/components/dialog/DeleteConfirm'\r\n\r\nconst sortOptions = [\r\n{\r\n  value: 'name|asc',\r\n  label: 'Name (Ascending A to Z)'\r\n},\r\n{\r\n  value: 'name|desc', \r\n  label: 'Name (Descending Z to A)'\r\n}\r\n]\r\nconst useStyles = makeStyles((theme)=> ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  content:{\r\n    marginTop: 60\r\n  }\r\n}))\r\n\r\nfunction SurgicalSetListView(){\r\n  const classes = useStyles()\r\n  const {t} = useTranslation([TRANSLATE_NS.SETS, TRANSLATE_NS.TRANSLATIONS])\r\n  const isMounted = useIsMountedRef()\r\n  const [loading, setLoading] = useState(true)\r\n  const [sets, setSets] = useState(null)\r\n  const [page, setPage] = useState(defaultPaging.PAGE)\r\n  const [sort, setSort] = useState(sortOptions[0].value)\r\n  const [limit, setLimit] = useState(defaultPaging.PAGE_SIZE)\r\n  const [query, setQuery] = useState(\"\")\r\n  const [openDeleteConfirm, setOpenDeleteConfirm] = useState(false)\r\n  const currentDataItem = useRef(null)\r\n  const { enqueueSnackbar } = useSnackbar()\r\n\r\n  const handleQueryChange = (value) => {   \r\n    setQuery(()=> value)\r\n    getSetsFromApi(value, sort, page, limit)\r\n  }\r\n\r\n  const handleSortChange = (value) => {  \r\n    setSort(()=> value)\r\n    getSetsFromApi(query, value, page, limit)\r\n  }\r\n\r\n  const handlePageChange = (newPage) => { \r\n    setPage(() => newPage)\r\n    getSetsFromApi(query, sort, newPage, limit)\r\n  }\r\n\r\n  const handleLimitChange = (value) => {\r\n    setLimit(() => value)\r\n    getSetsFromApi(query, sort, page, value)\r\n  }\r\n\r\n  const handleRemove = (dataItem) => {\r\n    currentDataItem.current = dataItem\r\n    setOpenDeleteConfirm(true)\r\n  }\r\n\r\n  const getMessage = () => {\r\n    if(currentDataItem.current)\r\n      return currentDataItem.current?.name\r\n    else\r\n      return null\r\n  }\r\n\r\n  const confirmRemove = async () => {\r\n    setOpenDeleteConfirm(false)\r\n    try{\r\n      const result = await setsService.remove(currentDataItem.current)\r\n\r\n      console.log(result)\r\n      \r\n      if(result.resultFlag){\r\n        enqueueSnackbar('Removed success!', { variant: 'success' })        \r\n        getSetsFromApi(query, sort, page, limit)\r\n      }\r\n    }\r\n    catch(error){\r\n      enqueueSnackbar(error.errorMessage, { variant: 'error' }) \r\n    }\r\n  }\r\n\r\n  const getSetsFromApi = useCallback(async (query, sort, page, limit) => {\r\n    setLoading(true)\r\n    try{        \r\n      const result = await setsService.getList(query, sort, page, limit)\r\n      if(!isMounted.current)\r\n        return\r\n\r\n      if(result.resultFlag){\r\n        setSets(()=> ({...result.value}))\r\n      }\r\n      else{\r\n        //setError(result.errors)\r\n        enqueueSnackbar(result?.errorMessage ?? \"Something is wrong.\", { variant: 'error' })\r\n      }\r\n    }\r\n    catch(error){\r\n      //if(isMounted.current) setError(error.message)\r\n      console.error(error)\r\n      const errorMessage = error.message ?? \"Something is wrong.\"\r\n      enqueueSnackbar(errorMessage, { variant: 'error' })\r\n    }\r\n    finally {\r\n      if(isMounted.current) setLoading(false)\r\n    }\r\n  }, [isMounted, enqueueSnackbar])\r\n\r\n  useEffect(()=> {\r\n    getSetsFromApi(\"\", \"name|asc\", defaultPaging.PAGE, defaultPaging.PAGE_SIZE)\r\n  }, [getSetsFromApi])\r\n\r\n\r\n  // if(!sets){\r\n  //   return <SplashScreen />\r\n  // }\r\n\r\n  console.log('-----------render-----------', sets)\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title={t(\"sets:surgical instrument sets\")}\r\n    >\r\n      <Header onSearch={handleQueryChange} />\r\n      <Container \r\n        maxWidth=\"lg\"\r\n        className={classes.content}\r\n      >\r\n        {sets && (   \r\n          <Box>      \r\n            <Results\r\n              loading={loading} \r\n              sets={sets.data}\r\n              itemCounts={limit}\r\n              onSortChange={handleSortChange}\r\n              onRemove={handleRemove}\r\n              limit={limit} \r\n            />\r\n            <Paging \r\n              mt={1}\r\n              page={page} \r\n              limit={limit} \r\n              count={sets.total}\r\n              onChangePage={handlePageChange}\r\n              onChangeRowsPerPage={handleLimitChange}\r\n            />\r\n          </Box>\r\n        )}\r\n        <DeleteConfirmationDialog \r\n          onClose={(isDelete) => {\r\n            if(isDelete){\r\n              confirmRemove()\r\n            }\r\n            else{\r\n              setOpenDeleteConfirm(false)\r\n            }\r\n          }}\r\n          open={openDeleteConfirm}\r\n          getMessage={getMessage}\r\n        />\r\n      </Container>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default SurgicalSetListView"],"sourceRoot":""}