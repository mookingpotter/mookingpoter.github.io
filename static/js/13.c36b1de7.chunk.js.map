{"version":3,"sources":["views/equipments/ListView/Header/Filter.js","views/equipments/ListView/Header/index.js","views/equipments/ListView/Results/Sorting.js","views/equipments/ListView/Results/SetCard.js","views/equipments/ListView/Results/index.js","views/equipments/ListView/Paging.js","views/equipments/ListView/index.js","utils/analytics.js","components/Page.js","hooks/useIsMountedRef.js","components/BackToMainPageButton.js","components/PageName.js","components/MoreButton.js","../node_modules/@material-ui/icons/Search.js","../node_modules/@material-ui/icons/AddCircleOutlineOutlined.js","../node_modules/@material-ui/icons/ViewModule.js","services/equipmentService.js","../node_modules/@material-ui/lab/esm/ToggleButton/ToggleButton.js","../node_modules/react-feather/dist/icons/trash-2.js","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/isValueSelected.js","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/ToggleButtonGroup.js"],"names":["useStyles","makeStyles","theme","root","queryButton","marginLeft","spacing","marginRight","queryDivider","margin","queryCard","minHeight","borderRadius","padding","queryField","width","Filter","onSearch","className","rest","classes","t","useTranslation","TRANSLATE_NS","EQUIPMENTS","TRANSLATIONS","useState","inputValue","setInputValue","handleSearch","event","persist","Container","maxWidth","clsx","Card","Box","display","alignItems","TextField","fullWidth","onChange","target","value","size","label","Divider","orientation","flexItem","Hidden","smDown","Button","variant","color","onClick","only","IconButton","minWidth","height","background","palette","header","actionIcon","previousButton","textDecoration","titleRow","paddingTop","text","primary","addButton","addIconButton","searchWrapper","zIndex","drawer","marginTop","Header","Grid","container","justify","item","PageName","BackToMainPageButton","pt","component","RouterLink","to","flexWrap","justifyContent","breakpoints","up","sortByField","sortButton","textTransform","letterSpacing","displayItemCounts","Sorting","itemCounts","onSortChange","onModeChange","sortOptions","pagingService","sort","setSort","mode","setMode","Typography","name","select","SelectProps","native","map","option","key","mdDown","flexGrow","ToggleButtonGroup","exclusive","ToggleButton","defaultProps","withWidth","cardHeaderRoot","cardHeaderWidthForGird","cardHeaderWidthForList","imageLarge","SetCard","loading","dataItem","equipments","onRemove","history","useHistory","console","log","settingButtons","translateKey","click","url","id","push","icon","CardHeader","content","avatar","Avatar","alt","src","imageBase64","title","Skeleton","animation","data-testid","style","marginBottom","noWrap","action","MoreButton","buttonList","subheader","description","sortWrapper","Results","limit","obj","index","uuidv4","equipment","md","sm","xs","Paging","page","count","onChangePage","onChangeRowsPerPage","SETS","pageOptions","PAGING","PAGE_OPTIONS","TablePagination","newPage","rowsPerPage","rowsPerPageOptions","labelRowsPerPage","nextIconButtonText","backIconButtonText","PAGE","PAGE_SIZES","backgroundColor","default","EquipmentListView","isMounted","useIsMountedRef","setLoading","setEquipments","error","setError","query","setQuery","setPage","setLimit","currentDataItem","useRef","useEffect","a","equipmentsService","getList","result","current","resultFlag","errors","message","getEquipmentsFromApi","Page","data","length","mt","total","SplashScreen","track","window","gtag","pageview","props","process","type","forwardRef","ref","children","location","useLocation","sendPageViewEvent","useCallback","page_path","pathname","Helmet","prototype","PropTypes","string","memo","menu","moreRef","openMenu","setOpenMenu","fontSize","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","btn","buttonItem","uid","_interopRequireDefault","require","Object","defineProperty","exports","_react","_default","createElement","d","equipmentService","getAll","Promise","resolve","reject","axios","get","then","response","catch","params","errorCode","errorMessage","activityId","React","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","selected","_props$size","other","_objectWithoutProperties","ButtonBase","_extends","concat","capitalize","focusRipple","isDefaultPrevented","withStyles","typography","button","boxSizing","shape","border","fade","active","borderLeft","sizeSmall","pxToRem","sizeLarge","assign","i","arguments","source","hasOwnProperty","call","apply","this","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Trash2","_ref","_ref$color","_ref$size","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","propTypes","oneOfType","number","displayName","isValueSelected","candidate","undefined","Array","isArray","_props$exclusive","_props$orientation","handleChange","buttonValue","newValue","slice","splice","handleExclusiveChange","role","child","grouped","flexDirection","groupedHorizontal","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","borderTop"],"mappings":"2YAmBMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,GACNC,YAAa,CACXC,WAAYH,EAAMI,QAAQ,GAC1BC,YAAaL,EAAMI,QAAQ,IAE7BE,aAAc,CACZC,OAAQP,EAAMI,QAAQ,EAAG,IAE3BI,UAAW,CACTC,UAAW,GACXC,aAAcV,EAAMI,QAAQ,GAC5BO,QAASX,EAAMI,QAAQ,IAEzBQ,WAAY,CACVC,MAAO,MACPV,WAAYH,EAAMI,QAAQ,GAC1BC,YAAaL,EAAMI,QAAQ,QAsEhBU,MAlEf,YAAmD,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,UAAcC,EAAQ,wCAC1CC,EAAUpB,IACRqB,EAAMC,YAAe,CAC3BC,IAAaC,WACbD,IAAaE,eAFPJ,EAFwC,EAMZK,mBAAS,IANG,mBAMzCC,EANyC,KAM7BC,EAN6B,KAY1CC,EAAe,SAAAC,GACnBA,EAAMC,UACNd,EAASU,IAGX,OACE,kBAACK,EAAA,EAAD,eACEC,SAAS,KACTf,UAAWgB,YAAKhB,EAAWE,EAAQjB,OAC/BgB,GAEJ,kBAACgB,EAAA,EAAD,CAAMjB,UAAWE,EAAQV,WACvB,kBAAC0B,EAAA,EAAD,CAAKC,QAAQ,OAAOC,WAAW,UAC7B,kBAACC,EAAA,EAAD,CACEC,WAAW,EACXtB,UAAWE,EAAQN,WACnB2B,SApBgB,SAAAX,GACxBA,EAAMC,UACNH,EAAcE,EAAMY,OAAOC,QAmBnBA,MAAOhB,EACPiB,KAAK,QACLC,MAAOxB,EAAE,mDAEX,kBAACyB,EAAA,EAAD,CACEC,YAAY,WACZC,UAAQ,EACR9B,UAAWE,EAAQZ,eAErB,kBAACyC,EAAA,EAAD,CAAQC,QAAM,GACZ,kBAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNnC,UAAWE,EAAQhB,YAEnBkD,QAASzB,GAET,kBAAC,IAAD,MACCR,EAAE,yBAGP,kBAAC4B,EAAA,EAAD,CAAQM,KAAM,CAAC,KAAM,KAAM,OACzB,kBAACC,EAAA,EAAD,CAAYH,MAAM,UAAUC,QAASzB,GACnC,kBAAC,IAAD,YChFR7B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJsD,SAAU,OACVC,OAAQ,IAERC,WAAYzD,EAAM0D,QAAQD,WAAWE,QAEvCC,WAAY,CACVvD,YAAaL,EAAMI,QAAQ,IAE7ByD,eAAgB,CACd,UAAW,CACTC,eAAgB,cAGpBC,SAAU,CACRC,WAAYhE,EAAMI,QAAQ,GAC1B+C,MAAOnD,EAAM0D,QAAQO,KAAKC,SAE5BC,UAAW,GACXC,cAAe,CACb/D,YAAaL,EAAMI,QAAQ,IAE7BiE,cAAe,CACbC,OAAQtE,EAAMsE,OAAOC,OAAS,IAC9BC,UAAWxE,EAAMI,QAAQ,QAkDdqE,MA9Cf,YAAmD,IAAjC1D,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,UAAcC,EAAQ,wCAC1CC,EAAUpB,IACRqB,EAAMC,YAAe,CAC3BC,IAAaC,WACbD,IAAaE,eAFPJ,EAKR,OACE,uCAAKH,UAAWgB,YAAKd,EAAQjB,KAAMe,IAAgBC,GACjD,kBAACa,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC2C,EAAA,EAAD,CACEtC,WAAW,SACXuC,WAAS,EACTC,QAAQ,gBACR5D,UAAWE,EAAQ6C,UAEnB,kBAACW,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACC,EAAA,EAAD,KAAW3D,EAAE,uCAEf,kBAACuD,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACE,EAAA,EAAD,CAAsB/D,UAAWE,EAAQ2C,mBAG7C,kBAAC3B,EAAA,EAAD,CAAK8C,GAAI,GACP,kBAAC/B,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNnC,UAAWE,EAAQiD,UACnBc,UAAWC,IACXC,GAAG,KAEH,kBAAC,IAAD,CAA8BnE,UAAWE,EAAQkD,gBAChDjD,EAAE,4CAIT,kBAAC,EAAD,CAAQJ,SAAUA,EAAUC,UAAWE,EAAQmD,kB,gFC5D/CvE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAK,aACHkC,QAAS,OACTC,WAAY,SACZgD,SAAU,OACVC,eAAgB,UACfrF,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BF,eAAgB,kBAGpBG,YAAa,CACXnF,YAAaL,EAAMI,QAAQ,IAE7BqF,WAAY,CACVC,cAAe,OACfC,cAAe,EACftF,YAAaL,EAAMI,QAAQ,IAE7BwF,kBAAmB,OAGrB,SAASC,EAAT,GAMI,IALFC,EAKC,EALDA,WACAC,EAIC,EAJDA,aACAC,EAGC,EAHDA,aACAhF,EAEC,EAFDA,UACGC,EACF,wEACKC,EAAUpB,IACRqB,EAAMC,YAAe,CAC3BC,IAAaE,aACbF,IAAaC,aAFPH,EAIF8E,EAAcC,IAAcD,YANjC,EAOuBzE,mBAASyE,EAAY,GAAGxD,OAP/C,mBAOM0D,EAPN,KAOYC,EAPZ,OAQuB5E,mBAAS,QARhC,mBAQM6E,EARN,KAQYC,EARZ,KAqBD,OACE,kBAACpE,EAAA,EAAD,eAAKlB,UAAWgB,YAAKhB,EAAWE,EAAQjB,OAAWgB,GACjD,kBAAC8B,EAAA,EAAD,CAAQC,QAAM,GACZ,kBAACd,EAAA,EAAD,CAAKC,QAAQ,OAAOC,WAAW,UAC7B,kBAACmE,EAAA,EAAD,CACEvF,UAAWE,EAAQ0E,kBACnB1C,QAAQ,KACRC,MAAM,eAHR,UAKMhC,EAAE,wBALR,YAKmC2E,EALnC,YAKiD3E,EAC7C,yCAKR,kBAACe,EAAA,EAAD,CAAKC,QAAQ,OAAOC,WAAW,UAC7B,kBAACC,EAAA,EAAD,CACEM,MAAOxB,EAAE,wBACTqF,KAAK,OACLjE,SA9BiB,SAAAX,GACvBA,EAAMC,UACNuE,EAAQxE,EAAMY,OAAOC,OACrBsD,EAAanE,EAAMY,OAAOC,QA4BpBgE,QAAM,EACNC,YAAa,CAAEC,QAAQ,GACvBlE,MAAO0D,EACPjD,QAAQ,WACRR,KAAK,QACL1B,UAAWE,EAAQsE,aAElBS,EAAYW,KAAI,SAAAC,GAAM,OACrB,4BAAQC,IAAKD,EAAOpE,MAAOA,MAAOoE,EAAOpE,OACtCoE,EAAOlE,WAId,kBAACI,EAAA,EAAD,CAAQgE,QAAM,GACZ,kBAAC7E,EAAA,EAAD,CAAK8E,SAAU,IACf,kBAACC,EAAA,EAAD,CACEC,WAAS,EACT3E,SA3Ce,SAACX,EAAOa,GAC/Bb,EAAMC,UACNyE,EAAQ7D,GACRuD,EAAavD,IAyCLC,KAAK,QACLD,MAAO4D,GAEP,kBAACc,EAAA,EAAD,CAAc1E,MAAM,QAClB,kBAAC,IAAD,CAAgBU,MAAM,iBAiBpC0C,EAAQuB,aAAe,CACrBtB,WAAY,EACZC,aAAc,aACdC,aAAc,aACdhF,UAAW,IAGEqG,oBAAYxB,G,mECnHrB/F,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJsD,SAAU,KAEZ+D,eAAgB,CACdlF,WAAY,SAEdmF,uBAAwB,CACtBxF,SAAU,OAEZyF,uBAAwB,CACtBzF,SAAU,OAEZ0F,WAAY,CACV5G,MAAOb,EAAMI,QAAQ,GACrBoD,OAAQxD,EAAMI,QAAQ,QAmFXsH,OA/Ef,YAOI,IANFC,EAMC,EANDA,QACYC,EAKX,EALDC,WACAC,EAIC,EAJDA,SACA9G,EAGC,EAHDA,UACAqF,EAEC,EAFDA,KACGpF,EACF,sEACKC,EAAUpB,KACViI,EAAUC,cAEhBC,QAAQC,IAAI,iBAAkB7B,GAE9B,IAAM8B,EAAiB,CACrB,CACEC,aAAc,OACdC,MAAO,WACL,IAAMC,EAAG,gBAAYV,EAASW,IAC9BR,EAAQS,KAAKF,IAEfG,KAAM,kBAAC,KAAD,OAER,CACEL,aAAc,SACdC,MAAO,WACDP,GACFA,EAASF,IAGba,KAAM,kBAAC,KAAD,QAGV,OACE,kBAACxG,EAAA,EAAD,eAAMjB,UAAWgB,YAAKd,EAAQjB,KAAMe,IAAgBC,GAClD,kBAACyH,EAAA,EAAD,CACExH,QAAS,CACPjB,KAAMiB,EAAQoG,eACdqB,QAAkB,SAATtC,EAAkBnF,EAAQqG,uBAAyB,IAE9DqB,OACE,kBAACC,EAAA,EAAD,CACEC,IAAI,aACJ5F,QAAQ,SACR6F,IAAKnB,EAASoB,YACdhI,UAAWE,EAAQuG,aAGvBwB,MACEtB,EACE,kBAAC,WAAD,KACE,kBAACuB,EAAA,EAAD,CACEC,UAAU,OACVjG,QAAQ,OACRkG,cAAY,mBAEd,kBAACF,EAAA,EAAD,CACEC,UAAU,OACV3F,OAAQ,GACR3C,MAAM,MACNwI,MAAO,CAAEC,aAAc,MAGhB,SAATjD,EACF,kBAACE,EAAA,EAAD,CAAYpD,MAAM,cAAcD,QAAQ,KAAKqG,QAAM,GAChD3B,EAASpB,MAGZ,kBAACD,EAAA,EAAD,CAAYpD,MAAM,cAAcD,QAAQ,MACrC0E,EAASpB,MAIhBgD,OAAQ7B,EAAU,KAAO,kBAAC8B,GAAA,EAAD,CAAYC,WAAYvB,IACjDwB,UAAW/B,EAASgC,iBCpGtB9J,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,GACN4J,YAAa,CACXP,aAActJ,EAAMI,QAAQ,QAIhC,SAAS0J,GAAT,GASI,IARFnC,EAQC,EARDA,QACAE,EAOC,EAPDA,WACA/B,EAMC,EANDA,WAEAC,GAIC,EALDgE,MAKC,EAJDhE,cACA+B,EAGC,EAHDA,SACA9G,EAEC,EAFDA,UACGC,EACF,mGACKC,EAAUpB,KADf,EAEuB0B,mBAAS,QAFhC,mBAEM6E,EAFN,KAEYC,EAFZ,KAQD,IAAgB,IAAZqB,EAAkB,CAEpB,IADA,IAAIqC,EAAM,GACDC,EAAQ,EAAcA,EAAH,EAAkBA,IAC5CD,EAAIxB,KAAK,CAAED,GAAI2B,gBAEjBrC,EAAU,UAAOmC,GAInB,OADA/B,QAAQC,IAAI,gBAEV,uCAAKlH,UAAWgB,YAAKd,EAAQjB,KAAMe,IAAgBC,GACjD,kBAAC,EAAD,CACE6E,WAAYA,EACZC,aAAcA,EACdC,aAlBmB,SAAAvD,GACvB6D,EAAQ7D,IAkBJzB,UAAWE,EAAQ2I,cAErB,kBAACnF,EAAA,EAAD,CAAMC,WAAS,EAACvE,QAAS,GACtByH,EAAWjB,KAAI,SAAAuD,GAAS,OACvB,kBAACzF,EAAA,EAAD,CACEG,MAAI,EACJiC,IAAKqD,EAAU5B,GACf6B,GAAa,SAAT/D,EAAkB,EAAI,GAC1BgE,GAAa,SAAThE,EAAkB,EAAI,GAC1BiE,GAAI,IAEJ,kBAAC,GAAD,CACEzC,WAAYsC,EACZxC,QAASA,EACTG,SAAUA,EACVzB,KAAMA,UAmBpByD,GAAQ1C,aAAe,CACrBO,SAAS,EACT7B,WAAY,EACZiE,MAAO,EACPlC,WAAY,GACZ9B,aAAc,aACd/E,UAAW,GACX8G,SAAU,cAGGgC,U,WCnFThK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,OAGR,SAASsK,GAAT,GAQI,IAPFC,EAOC,EAPDA,KACAT,EAMC,EANDA,MACAU,EAKC,EALDA,MACAC,EAIC,EAJDA,aACAC,EAGC,EAHDA,oBACA3J,EAEC,EAFDA,UACGC,EACF,yFACKC,EAAUpB,KACRqB,EAAMC,YAAe,CAACC,IAAaE,aAAcF,IAAauJ,OAA9DzJ,EACF0J,EAAcC,IAAOC,aAU3B,OACE,kBAAC7I,EAAA,EAAD,eACElB,UAAWgB,YAAKhB,EAAWE,EAAQjB,OAC/BgB,EAFN,CAGEkB,QAAQ,OACRkD,eAAe,WAEf,kBAAC2F,GAAA,EAAD,CACE/F,UAAU,MACVwF,MAAOA,EACPC,aAdmB,SAAC9I,EAAOqJ,GAC/BrJ,EAAMC,UACN6I,EAAaO,IAaTN,oBAnBoB,SAAA/I,GACxBA,EAAMC,UACN8I,EAAoB/I,EAAMY,OAAOC,QAkB7B+H,KAAMA,EACNU,YAAanB,EACboB,mBAAoBN,EACpBO,iBAAkBjK,EAAE,8BACpBkK,mBAAoBlK,EAAE,0BACtBmK,mBAAoBnK,EAAE,iCAe9BoJ,GAAOnD,aAAe,CACpBoD,KAAMM,IAAOS,KACbxB,MAAOe,IAAOU,WACdf,MAAO,EACPC,aAAc,aACdC,oBAAqB,aACrB3J,UAAW,IAGEuJ,UC7DTtE,GAAc,CAClB,CACExD,MAAO,WACPE,MAAO,2BAET,CACEF,MAAO,YACPE,MAAO,6BAIL7C,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJwL,gBAAiBzL,EAAM0D,QAAQD,WAAWiI,SAE5C/C,QAAS,CACPnE,UAAW,QAwGAmH,UApGf,WACE,IAAMzK,EAAUpB,KACV8L,EAAYC,cACV1K,EAAMC,YAAe,CAC3BC,IAAaC,WACbD,IAAaE,eAFPJ,EAHmB,EAOGK,oBAAS,GAPZ,mBAOpBmG,EAPoB,KAOXmE,EAPW,OAQStK,mBAAS,MARlB,mBAQpBqG,EARoB,KAQRkE,EARQ,OASDvK,mBAAS,MATR,mBASpBwK,EAToB,KASbC,EATa,OAUDzK,mBAAS,IAVR,mBAUpB0K,EAVoB,KAUbC,EAVa,OAWH3K,mBAASyE,GAAY,GAAGxD,OAXrB,mBAWpB0D,EAXoB,KAWdC,EAXc,OAYH5E,mBAAS,GAZN,mBAYpBgJ,EAZoB,KAYd4B,EAZc,OAaD5K,mBAAS,GAbR,mBAapBuI,EAboB,KAabsC,EAba,KAerBC,EAAkBC,iBAAO,MA+C/B,OA1BAC,qBAAU,WACRV,GAAW,GACe,uCAAG,4BAAAW,EAAA,+EAEJC,IAAkBC,QACrCT,EACA/F,EACAqE,EACAT,GANuB,UAEnB6C,EAFmB,OAQpBhB,EAAUiB,QARU,iDAUrBD,EAAOE,WACTf,EAAca,EAAOnK,OAErBwJ,EAASW,EAAOG,QAbO,gDAgBrBnB,EAAUiB,SAASZ,EAAS,KAAMe,SAhBb,yBAkBrBpB,EAAUiB,SAASf,GAAW,GAlBT,4EAAH,oDAqB1BmB,KACC,CAACf,EAAO/F,EAAMqE,EAAMT,EAAO6B,IAEzB/D,GAILI,QAAQC,IAAI,+BAAgCL,GAG1C,kBAACqF,EAAA,EAAD,CACElM,UAAWE,EAAQjB,KACnBgJ,MAAO9H,EAAE,sCAET,kBAAC,EAAD,CAAQJ,SAxDc,SAAA0B,GACxB0J,GAAS,kBAAM1J,QAwDb,kBAACX,EAAA,EAAD,CAAWC,SAAS,KAAKf,UAAWE,EAAQyH,SACzCqD,GAAS,6BAAMA,GACfnE,GACC,kBAAC3F,EAAA,EAAD,KACE,kBAAC,GAAD,CACEyF,QAASA,EACTE,WAAYA,EAAWsF,KACvBrH,WAAY+B,EAAWsF,KAAKC,OAC5BrH,aArDa,SAAAtD,GACvB2D,GAAQ,kBAAM3D,MAqDJqF,SAnDS,SAAAF,GACnB0E,EAAgBO,QAAUjF,GAmDhBmC,MAAOA,IAET,kBAAC,GAAD,CACEsD,GAAI,EACJ7C,KAAMA,EACNT,MAAOA,EACPU,MAAO5C,EAAWyF,MAClB5C,aAtEa,SAAAO,GACvBmB,GAAQ,kBAAMnB,MAsEJN,oBAnEc,SAAAlI,GACxB4J,GAAS,kBAAM5J,YAqCR,kBAAC8K,EAAA,EAAD,Q,+EChGX,SAASC,IAAgB,IAAD,EAKfC,OAAOC,OAIZ,EAAAD,QAAOC,KAAP,mBAWa,OACbC,SATF,SAAkBC,GAChBJ,EAAM,SAAUK,GAAyCD,IASzDhM,MANF,SAAekM,EAAMF,GACnBJ,EAAM,QAASM,EAAMF,KCRjBV,EAAOa,sBAAW,WAIrBC,GAAS,IAHV/E,EAGS,EAHTA,MACAgF,EAES,EAFTA,SACGhN,EACM,oCACHiN,EAAWC,cAEXC,EAAoBC,uBAAY,WACpCb,EAAMG,SAAS,CACbW,UAAWJ,EAASK,aAErB,CAACL,IAMJ,OAJA1B,qBAAU,WACR4B,MACC,CAACA,IAGF,uCACEJ,IAAKA,GACD/M,GAEJ,kBAACuN,EAAA,EAAD,KACE,+CAAqBvF,IAEtBgF,MAUQf,O,iCC5CjB,6CAEe,SAASrB,IACtB,IAAMD,EAAYW,kBAAO,GAMzB,OAJAC,qBAAU,kBAAM,WACdZ,EAAUiB,SAAU,KACnB,IAEIjB,I,gICDH9L,EAAYC,aAAW,SAACC,GAAD,MAAW,CACtCC,KAAM,CACJkD,MAAOnD,EAAM0D,QAAQQ,QAAQ+E,WAIjC,SAASlE,EAAT,GAAoD,IAArB/D,EAAoB,EAApBA,UAAcC,EAAM,6BAC3CC,EAAUpB,IACTqB,EAAKC,YAAe,CAACC,IAAaE,eAAlCJ,EAEP,OACE,kBAAC,IAAD,eACE8D,UAAWC,IACXC,GAAG,IACHnE,UAAWgB,YAAKd,EAAQjB,KAAMe,IAC1BC,GAEHE,EAAE,sBAKT4D,EAAqB0J,UAAY,CAC/BzN,UAAW0N,IAAUC,QAGRC,mBAAK7J,I,uFC7BdjF,EAAYC,aAAW,SAACC,GAAD,MAAU,CACrCC,KAAM,CACJkD,MAAOnD,EAAM0D,QAAQQ,QAAQ+E,WAuBlBnE,IAnBf,YAAkD,IAA/BmJ,EAA8B,EAA9BA,SAAUjN,EAAoB,EAApBA,UAAcC,EAAM,wCACzCC,EAAUpB,IAEhB,OACE,kBAAC,IAAD,eACEoD,QAAQ,KACRlC,UAAWgB,YAAKhB,EAAWE,EAAQjB,OAC/BgB,GAEHgN,K,iLCADnO,EAAYC,aAAW,iBAAO,CAClC8O,KAAM,CAEJ9M,SAAU,YAId,SAAS0H,EAAT,GAA8C,IAAxBC,EAAuB,EAAvBA,WAAezI,EAAQ,8BACrCC,EAAUpB,IACVgP,EAAUvC,iBAAO,MAFoB,EAGX/K,oBAAS,GAHE,mBAGpCuN,EAHoC,KAG1BC,EAH0B,KAIpC7N,EAAKC,YAAe,CAACC,IAAaE,eAAlCJ,EAiBP,OACE,oCACE,kBAAC,IAAD,CAAS8H,MAAO9H,EAAE,8BAChB,kBAAC,IAAD,iBACMF,EADN,CAEEmC,QApBe,WACrB4L,GAAY,IAoBNhB,IAAKc,IAEL,kBAAC,IAAD,CAAUG,SAAS,YAGvB,kBAAC,IAAD,CACEC,SAAUJ,EAAQjC,QAClBsC,aAAc,CACZC,SAAU,MACVC,WAAY,QAEdC,QA5BkB,WACtBN,GAAY,IA4BRO,KAAMR,EACNS,WAAY,CAAExO,UAAWE,EAAQ2N,MACjCY,gBAAiB,CACfL,SAAU,MACVC,WAAY,SAIZ3F,GAAcA,EAAW9C,KAAI,SAAC8I,GAC5B,OACE,kBAAC,IAAD,CACEtM,QAAS,WApCC,IAACuM,EACQ,oBADRA,EAoCmBD,GAnCrBrH,QACnBsH,EAAWtH,QACX2G,GAAY,KAkCFlI,IAAK8I,YAAIF,GACTjN,MAAOiN,GAEP,kBAAC,IAAD,KACGA,EAAIjH,MAEP,kBAAC,IAAD,CAAcvE,QAAS/C,EAAEuO,EAAItH,sBAe7CqB,EAAWrC,aAAe,CACxBpG,UAAW,GACX0I,WAAY,IAGCkF,mBAAKnF,I,iCCtGpB,IAAIoG,EAAyBC,EAAQ,KAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CxN,OAAO,IAETwN,EAAQvE,aAAU,EAElB,IAAIwE,EAASL,EAAuBC,EAAQ,IAIxCK,GAAW,EAFMN,EAAuBC,EAAQ,MAElBpE,SAASwE,EAAOxE,QAAQ0E,cAAc,OAAQ,CAC9EC,EAAG,+OACD,UAEJJ,EAAQvE,QAAUyE,G,iCCflB,IAAIN,EAAyBC,EAAQ,KAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CxN,OAAO,IAETwN,EAAQvE,aAAU,EAElB,IAAIwE,EAASL,EAAuBC,EAAQ,IAIxCK,GAAW,EAFMN,EAAuBC,EAAQ,MAElBpE,SAASwE,EAAOxE,QAAQ0E,cAAc,OAAQ,CAC9EC,EAAG,mKACD,4BAEJJ,EAAQvE,QAAUyE,G,iCCflB,IAAIN,EAAyBC,EAAQ,KAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CxN,OAAO,IAETwN,EAAQvE,aAAU,EAElB,IAAIwE,EAASL,EAAuBC,EAAQ,IAIxCK,GAAW,EAFMN,EAAuBC,EAAQ,MAElBpE,SAASwE,EAAOxE,QAAQ0E,cAAc,OAAQ,CAC9EC,EAAG,4FACD,cAEJJ,EAAQvE,QAAUyE,G,sDC6DZG,EAAmB,I,sCA3EvBC,OAAS,kBACP,IAAIC,SAAQ,SAACC,EAASC,GACpBC,IACGC,IAAI,mBACJC,MAAK,SAAAC,GACJL,EAAQK,EAAS3D,SAElB4D,OAAM,SAAA/E,GACL0E,EAAO,CAAEvD,KAAM,GAAIG,MAAO,EAAGP,OAAQf,W,KAI7CW,QAAU,SAACT,EAAO/F,EAAMqE,EAAMT,GAApB,OACR,IAAIyG,SAAQ,SAACC,EAASC,GACpBC,IACGC,IAAI,wBAAyB,CAAEI,OAAQ,CAAE9E,QAAO/F,OAAMqE,OAAMT,WAC5D8G,MAAK,SAAAC,GACCA,EAULL,EAAQ,CACN3D,YAAY,EACZrK,MAAOqO,EAAS3D,OAXhBuD,EAAO,CACL5D,YAAY,EACZrK,MAAO,KACPwO,UAAW,sBACXC,aAAa,eAAD,OAAiBJ,GAC7BK,WAAY,UASjBJ,OAAM,SAAA/E,GACL0E,EAAO,CACL5D,YAAY,EACZrK,MAAO,KACPwO,UAAW,sBACXC,aAAclF,EAAMgB,QACpBmE,WAAY,eAuCTb,O,iCChFf,sEAyEInJ,EAA4BiK,cAAiB,SAAsBxD,EAAOI,GAC5E,IAAIC,EAAWL,EAAMK,SACjB/M,EAAU0M,EAAM1M,QAChBF,EAAY4M,EAAM5M,UAClBqQ,EAAkBzD,EAAM0D,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAwB3D,EAAM4D,mBAC9BA,OAA+C,IAA1BD,GAA2CA,EAChEhP,EAAWqL,EAAMrL,SACjBa,EAAUwK,EAAMxK,QAChBqO,EAAW7D,EAAM6D,SACjBC,EAAc9D,EAAMlL,KACpBA,OAAuB,IAAhBgP,EAAyB,SAAWA,EAC3CjP,EAAQmL,EAAMnL,MACdkP,EAAQC,YAAyBhE,EAAO,CAAC,WAAY,UAAW,YAAa,WAAY,qBAAsB,WAAY,UAAW,WAAY,OAAQ,UAgB9J,OAAoBwD,gBAAoBS,IAAYC,YAAS,CAC3D9Q,UAAWgB,YAAKd,EAAQjB,KAAMe,EAAWsQ,GAAYpQ,EAAQoQ,SAAUG,GAAYvQ,EAAQuQ,SAAmB,WAAT/O,GAAqBxB,EAAQ,OAAO6Q,OAAOC,YAAWtP,MAC3J4O,SAAUA,EACVW,aAAcT,EACdxD,IAAKA,EACL5K,QAnBiB,SAAsBxB,GACnCwB,IACFA,EAAQxB,EAAOa,GAEXb,EAAMsQ,uBAKR3P,GACFA,EAASX,EAAOa,IAUlBF,SAAUA,EACVE,MAAOA,EACP,eAAgBgP,GACfE,GAAqBP,gBAAoB,OAAQ,CAClDpQ,UAAWE,EAAQyB,OAClBsL,OA4DUkE,iBArKK,SAAgBnS,GAClC,MAAO,CAELC,KAAM6R,YAAS,GAAI9R,EAAMoS,WAAWC,OAAQ,CAC1CC,UAAW,aACX5R,aAAcV,EAAMuS,MAAM7R,aAC1BC,QAAS,GACT6R,OAAQ,aAAaT,OAAOU,YAAKzS,EAAM0D,QAAQ8F,OAAOkJ,OAAQ,MAC9DvP,MAAOsP,YAAKzS,EAAM0D,QAAQ8F,OAAOkJ,OAAQ,KACzC,aAAc,CACZvP,MAAOnD,EAAM0D,QAAQ8F,OAAOkJ,OAC5BjH,gBAAiBgH,YAAKzS,EAAM0D,QAAQ8F,OAAOkJ,OAAQ,KACnD,UAAW,CACTjH,gBAAiBgH,YAAKzS,EAAM0D,QAAQ8F,OAAOkJ,OAAQ,MAErD,QAAS,CACPC,WAAY,EACZxS,WAAY,IAGhB,aAAc,CACZgD,MAAOsP,YAAKzS,EAAM0D,QAAQ8F,OAAO8H,SAAU,MAE7C,UAAW,CACTxN,eAAgB,OAEhB2H,gBAAiBgH,YAAKzS,EAAM0D,QAAQO,KAAKC,QAAS,KAClD,uBAAwB,CACtBuH,gBAAiB,eAEnB,aAAc,CACZA,gBAAiB,kBAMvB6F,SAAU,GAGVG,SAAU,GAGV9O,MAAO,CACL9B,MAAO,OAEPsB,QAAS,UACTC,WAAY,UACZiD,eAAgB,WAIlBuN,UAAW,CACTjS,QAAS,EACTsO,SAAUjP,EAAMoS,WAAWS,QAAQ,KAIrCC,UAAW,CACTnS,QAAS,GACTsO,SAAUjP,EAAMoS,WAAWS,QAAQ,QAyGP,CAChCrM,KAAM,mBADO2L,CAEZhL,I,iCChLH,6CAAS2K,IAA2Q,OAA9PA,EAAW/B,OAAOgD,QAAU,SAAUvQ,GAAU,IAAK,IAAIwQ,EAAI,EAAGA,EAAIC,UAAU7F,OAAQ4F,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIlM,KAAOoM,EAAcnD,OAAOtB,UAAU0E,eAAeC,KAAKF,EAAQpM,KAAQtE,EAAOsE,GAAOoM,EAAOpM,IAAY,OAAOtE,IAA2B6Q,MAAMC,KAAML,WAEhT,SAASrB,EAAyBsB,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,GAAI,IAAkEpM,EAAKkM,EAAnExQ,EAEzF,SAAuC0Q,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,GAAI,IAA2DpM,EAAKkM,EAA5DxQ,EAAS,GAAQgR,EAAazD,OAAO0D,KAAKP,GAAqB,IAAKF,EAAI,EAAGA,EAAIQ,EAAWpG,OAAQ4F,IAAOlM,EAAM0M,EAAWR,GAAQO,EAASG,QAAQ5M,IAAQ,IAAatE,EAAOsE,GAAOoM,EAAOpM,IAAQ,OAAOtE,EAFxMmR,CAA8BT,EAAQK,GAAuB,GAAIxD,OAAO6D,sBAAuB,CAAE,IAAIC,EAAmB9D,OAAO6D,sBAAsBV,GAAS,IAAKF,EAAI,EAAGA,EAAIa,EAAiBzG,OAAQ4F,IAAOlM,EAAM+M,EAAiBb,GAAQO,EAASG,QAAQ5M,IAAQ,GAAkBiJ,OAAOtB,UAAUqF,qBAAqBV,KAAKF,EAAQpM,KAAgBtE,EAAOsE,GAAOoM,EAAOpM,IAAU,OAAOtE,EAMne,IAAIuR,EAAShG,sBAAW,SAAUiG,EAAMhG,GACtC,IAAIiG,EAAaD,EAAK7Q,MAClBA,OAAuB,IAAf8Q,EAAwB,eAAiBA,EACjDC,EAAYF,EAAKtR,KACjBA,OAAqB,IAAdwR,EAAuB,GAAKA,EACnCjT,EAAO2Q,EAAyBoC,EAAM,CAAC,QAAS,SAEpD,OAAoB5C,IAAMhB,cAAc,MAAO0B,EAAS,CACtD9D,IAAKA,EACLmG,MAAO,6BACPtT,MAAO6B,EACPc,OAAQd,EACR0R,QAAS,YACTC,KAAM,OACNC,OAAQnR,EACRoR,YAAa,IACbC,cAAe,QACfC,eAAgB,SACfxT,GAAoBmQ,IAAMhB,cAAc,WAAY,CACrDsE,OAAQ,iBACOtD,IAAMhB,cAAc,OAAQ,CAC3CC,EAAG,mFACYe,IAAMhB,cAAc,OAAQ,CAC3CuE,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,OACW1D,IAAMhB,cAAc,OAAQ,CAC3CuE,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,YAGRf,EAAOgB,UAAY,CACjB5R,MAAOuL,IAAUC,OACjBjM,KAAMgM,IAAUsG,UAAU,CAACtG,IAAUC,OAAQD,IAAUuG,UAEzDlB,EAAOmB,YAAc,SACNnB,O,+EC7CA,SAASoB,EAAgB1S,EAAO2S,GAC7C,YAAkBC,IAAdD,QAAqCC,IAAV5S,IAI3B6S,MAAMC,QAAQH,GACTA,EAAU1B,QAAQjR,IAAU,EAG9BA,IAAU2S,G,kBC2CfnO,EAAiCmK,cAAiB,SAAsBxD,EAAOI,GACjF,IAAIC,EAAWL,EAAMK,SACjB/M,EAAU0M,EAAM1M,QAChBF,EAAY4M,EAAM5M,UAClBwU,EAAmB5H,EAAM1G,UACzBA,OAAiC,IAArBsO,GAAsCA,EAClDjT,EAAWqL,EAAMrL,SACjBkT,EAAqB7H,EAAM/K,YAC3BA,OAAqC,IAAvB4S,EAAgC,aAAeA,EAC7D/D,EAAc9D,EAAMlL,KACpBA,OAAuB,IAAhBgP,EAAyB,SAAWA,EAC3CjP,EAAQmL,EAAMnL,MACdkP,EAAQC,YAAyBhE,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,WAAY,cAAe,OAAQ,UAE7H8H,EAAe,SAAsB9T,EAAO+T,GAC9C,GAAKpT,EAAL,CAIA,IACIqT,EADA3L,EAAQxH,GAASA,EAAMiR,QAAQiC,GAG/BlT,GAASwH,GAAS,GACpB2L,EAAWnT,EAAMoT,SACRC,OAAO7L,EAAO,GAEvB2L,EAAWnT,EAAQA,EAAMsP,OAAO4D,GAAe,CAACA,GAGlDpT,EAASX,EAAOgU,KAGdG,EAAwB,SAA+BnU,EAAO+T,GAC3DpT,GAILA,EAASX,EAAOa,IAAUkT,EAAc,KAAOA,IAGjD,OAAoBvE,gBAAoB,MAAOU,YAAS,CACtDkE,KAAM,QACNhV,UAAWgB,YAAKd,EAAQjB,KAAMe,EAA2B,aAAhB6B,GAA8B3B,EAAQkO,UAC/EpB,IAAKA,GACJ2D,GAAQP,WAAexK,IAAIqH,GAAU,SAAUgI,GAChD,OAAmB7E,iBAAqB6E,GAUpB7E,eAAmB6E,EAAO,CAC5CjV,UAAWgB,YAAKd,EAAQgV,QAAShV,EAAQ,UAAU6Q,OAAOC,YAAWnP,KAAgBoT,EAAMrI,MAAM5M,WACjGuB,SAAU2E,EAAY6O,EAAwBL,EAC9CjE,cAAmC4D,IAAzBY,EAAMrI,MAAM6D,SAAyB0D,EAAgBc,EAAMrI,MAAMnL,MAAOA,GAASwT,EAAMrI,MAAM6D,SACvG/O,KAAMuT,EAAMrI,MAAMlL,MAAQA,IAbnB,YAwEEyP,iBAnKK,SAAgBnS,GAClC,MAAO,CAELC,KAAM,CACJkC,QAAS,cACTzB,aAAcV,EAAMuS,MAAM7R,cAI5B0O,SAAU,CACR+G,cAAe,UAIjBD,QAAS,GAGTE,kBAAmB,CACjB,sBAAuB,CACrBjW,YAAa,EACbwS,WAAY,wBACZ0D,oBAAqB,EACrBC,uBAAwB,GAE1B,qBAAsB,CACpBC,qBAAsB,EACtBC,wBAAyB,IAK7BC,gBAAiB,CACf,sBAAuB,CACrBjS,WAAY,EACZkS,UAAW,wBACXL,oBAAqB,EACrBE,qBAAsB,GAExB,qBAAsB,CACpBD,uBAAwB,EACxBE,wBAAyB,OA2HC,CAChChQ,KAAM,wBADO2L,CAEZlL","file":"static/js/13.c36b1de7.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { TRANSLATE_NS } from 'src/constants';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Divider,\r\n  TextField,\r\n  makeStyles,\r\n  Hidden,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  queryButton: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(3)\r\n  },\r\n  queryDivider: {\r\n    margin: theme.spacing(0, 3)\r\n  },\r\n  queryCard: {\r\n    minHeight: 60,\r\n    borderRadius: theme.spacing(1),\r\n    padding: theme.spacing(2)\r\n  },\r\n  queryField: {\r\n    width: '95%',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction Filter({ onSearch, className, ...rest }) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation([\r\n    TRANSLATE_NS.EQUIPMENTS,\r\n    TRANSLATE_NS.TRANSLATIONS\r\n  ]);\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleQueryChange = event => {\r\n    event.persist();\r\n    setInputValue(event.target.value);\r\n  };\r\n  const handleSearch = event => {\r\n    event.persist();\r\n    onSearch(inputValue);\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxWidth=\"md\"\r\n      className={clsx(className, classes.root)}\r\n      {...rest}\r\n    >\r\n      <Card className={classes.queryCard}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <TextField\r\n            fullWidth={true}\r\n            className={classes.queryField}\r\n            onChange={handleQueryChange}\r\n            value={inputValue}\r\n            size=\"small\"\r\n            label={t('equipments:register medical tools list search')}\r\n          />\r\n          <Divider\r\n            orientation=\"vertical\"\r\n            flexItem\r\n            className={classes.queryDivider}\r\n          />\r\n          <Hidden smDown>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.queryButton}\r\n              //size=\"small\"\r\n              onClick={handleSearch}\r\n            >\r\n              <SearchIcon />\r\n              {t('translations:search')}\r\n            </Button>\r\n          </Hidden>\r\n          <Hidden only={['md', 'lg', 'xl']}>\r\n            <IconButton color=\"primary\" onClick={handleSearch}>\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </Hidden>\r\n        </Box>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onSearch: PropTypes.func.isRequired,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { TRANSLATE_NS } from 'src/constants';\r\nimport clsx from 'clsx';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport { Box, Button, Grid, makeStyles, Container } from '@material-ui/core';\r\nimport BackToMainPageButton from 'src/components/BackToMainPageButton';\r\nimport PageName from 'src/components/PageName';\r\nimport Filter from './Filter';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    minWidth: '100%',\r\n    height: 130,\r\n    //background: theme.palette.backgroundHeader.backgroundImage\r\n    background: theme.palette.background.header\r\n  },\r\n  actionIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  previousButton: {\r\n    '&:hover': {\r\n      textDecoration: 'underline'\r\n    }\r\n  },\r\n  titleRow: {\r\n    paddingTop: theme.spacing(1),\r\n    color: theme.palette.text.primary\r\n  },\r\n  addButton: {},\r\n  addIconButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  searchWrapper: {\r\n    zIndex: theme.zIndex.drawer + 100,\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction Header({ onSearch, className, ...rest }) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation([\r\n    TRANSLATE_NS.EQUIPMENTS,\r\n    TRANSLATE_NS.TRANSLATIONS\r\n  ]);\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Container maxWidth=\"md\">\r\n        <Grid\r\n          alignItems=\"center\"\r\n          container\r\n          justify=\"space-between\"\r\n          className={classes.titleRow}\r\n        >\r\n          <Grid item>\r\n            <PageName>{t('equipments:register medical tools')}</PageName>\r\n          </Grid>\r\n          <Grid item>\r\n            <BackToMainPageButton className={classes.previousButton} />\r\n          </Grid>\r\n        </Grid>\r\n        <Box pt={1}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.addButton}\r\n            component={RouterLink}\r\n            to=\"/\"\r\n          >\r\n            <AddCircleOutlineOutlinedIcon className={classes.addIconButton} />\r\n            {t('equipments:add register medical tools')}\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n      <Filter onSearch={onSearch} className={classes.searchWrapper} />\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  onSearch: PropTypes.func,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n  withWidth,\r\n  Hidden\r\n} from '@material-ui/core';\r\nimport pagingService from 'src/services/pagingService';\r\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\r\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab';\r\nimport { TRANSLATE_NS } from 'src/constants';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.up('md')]: {\r\n      justifyContent: 'space-between'\r\n    }\r\n  },\r\n  sortByField: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  sortButton: {\r\n    textTransform: 'none',\r\n    letterSpacing: 0,\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  displayItemCounts: {}\r\n}));\r\n\r\nfunction Sorting({\r\n  itemCounts,\r\n  onSortChange,\r\n  onModeChange,\r\n  className,\r\n  ...rest\r\n}) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation([\r\n    TRANSLATE_NS.TRANSLATIONS,\r\n    TRANSLATE_NS.EQUIPMENTS\r\n  ]);\r\n  const sortOptions = pagingService.sortOptions;\r\n  const [sort, setSort] = useState(sortOptions[0].value);\r\n  const [mode, setMode] = useState('grid');\r\n\r\n  const handleSortChange = event => {\r\n    event.persist();\r\n    setSort(event.target.value);\r\n    onSortChange(event.target.value);\r\n  };\r\n  const handleModeChange = (event, value) => {\r\n    event.persist();\r\n    setMode(value);\r\n    onModeChange(value);\r\n  };\r\n\r\n  return (\r\n    <Box className={clsx(className, classes.root)} {...rest}>\r\n      <Hidden smDown>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Typography\r\n            className={classes.displayItemCounts}\r\n            variant=\"h5\"\r\n            color=\"textPrimary\"\r\n          >\r\n            {`${t('translations:showing')} ${itemCounts} ${t(\r\n              'equipments:register medical tools'\r\n            )}`}\r\n          </Typography>\r\n        </Box>\r\n      </Hidden>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <TextField\r\n          label={t('translations:sort by')}\r\n          name=\"sort\"\r\n          onChange={handleSortChange}\r\n          select\r\n          SelectProps={{ native: true }}\r\n          value={sort}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          className={classes.sortByField}\r\n        >\r\n          {sortOptions.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </TextField>\r\n        <Hidden mdDown>\r\n          <Box flexGrow={1} />\r\n          <ToggleButtonGroup\r\n            exclusive\r\n            onChange={handleModeChange}\r\n            size=\"small\"\r\n            value={mode}\r\n          >\r\n            <ToggleButton value=\"grid\">\r\n              <ViewModuleIcon color=\"primary\" />\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Hidden>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nSorting.propTypes = {\r\n  itemCounts: PropTypes.number,\r\n  onSortChange: PropTypes.func,\r\n  onModeChange: PropTypes.func,\r\n  className: PropTypes.string,\r\n  width: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs']).isRequired\r\n};\r\n\r\nSorting.defaultProps = {\r\n  itemCounts: 0,\r\n  onSortChange: () => {},\r\n  onModeChange: () => {},\r\n  className: ''\r\n};\r\n\r\nexport default withWidth()(Sorting);\r\n","import React, { Fragment } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Card,\r\n  Typography,\r\n  makeStyles,\r\n  CardHeader,\r\n  Avatar\r\n} from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { TRANSLATE_NS } from 'src/constants';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport { Edit2 as EditIcon, Trash2 as DeleteIcon } from 'react-feather';\r\nimport MoreButton from 'src/components/MoreButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    minWidth: 178\r\n  },\r\n  cardHeaderRoot: {\r\n    alignItems: 'unset'\r\n  },\r\n  cardHeaderWidthForGird: {\r\n    maxWidth: '55%'\r\n  },\r\n  cardHeaderWidthForList: {\r\n    maxWidth: '90%'\r\n  },\r\n  imageLarge: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8)\r\n  }\r\n}));\r\n\r\nfunction SetCard({\r\n  loading,\r\n  equipments: dataItem,\r\n  onRemove,\r\n  className,\r\n  mode,\r\n  ...rest\r\n}) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  console.log('SetCard mode: ', mode);\r\n\r\n  const settingButtons = [\r\n    {\r\n      translateKey: 'edit',\r\n      click: () => {\r\n        const url = `/sets/${dataItem.id}`;\r\n        history.push(url);\r\n      },\r\n      icon: <EditIcon />\r\n    },\r\n    {\r\n      translateKey: 'delete',\r\n      click: () => {\r\n        if (onRemove) {\r\n          onRemove(dataItem);\r\n        }\r\n      },\r\n      icon: <DeleteIcon />\r\n    }\r\n  ];\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader\r\n        classes={{\r\n          root: classes.cardHeaderRoot,\r\n          content: mode === 'grid' ? classes.cardHeaderWidthForGird : ''\r\n        }}\r\n        avatar={\r\n          <Avatar\r\n            alt=\"Remy Sharp\"\r\n            variant=\"square\"\r\n            src={dataItem.imageBase64}\r\n            className={classes.imageLarge}\r\n          />\r\n        }\r\n        title={\r\n          loading ? (\r\n            <Fragment>\r\n              <Skeleton\r\n                animation=\"wave\"\r\n                variant=\"text\"\r\n                data-testid=\"skeleton-title\"\r\n              ></Skeleton>\r\n              <Skeleton\r\n                animation=\"wave\"\r\n                height={10}\r\n                width=\"80%\"\r\n                style={{ marginBottom: 6 }}\r\n              />\r\n            </Fragment>\r\n          ) : mode === 'grid' ? (\r\n            <Typography color=\"textPrimary\" variant=\"h5\" noWrap>\r\n              {dataItem.name}\r\n            </Typography>\r\n          ) : (\r\n            <Typography color=\"textPrimary\" variant=\"h5\">\r\n              {dataItem.name}\r\n            </Typography>\r\n          )\r\n        }\r\n        action={loading ? null : <MoreButton buttonList={settingButtons} />}\r\n        subheader={dataItem.description}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default SetCard;\r\n\r\n// import React, { Fragment, useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import {\r\n//   getAllListEquipment,\r\n//   createFormEQ\r\n// } from 'src/actions/equipmentActions';\r\n// import { PAGING } from 'src/constants';\r\n// import Container from '@material-ui/core/Container';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Box from '@material-ui/core/Box';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import TablePagination from '@material-ui/core/TablePagination';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import Menu from '@material-ui/core/Menu';\r\n// import Button from '@material-ui/core/Button';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   fullHeight: {\r\n//     height: '100%'\r\n//   },\r\n//   formControl: {\r\n//     margin: theme.spacing(0, 4, 0, 2),\r\n//     minWidth: 50\r\n//   },\r\n//   boxEQRoot: {\r\n//     [theme.breakpoints.up('md')]: {\r\n//       width: '100%',\r\n//       height: '100%'\r\n//     },\r\n//     [theme.breakpoints.down('sm')]: {\r\n//       width: '100%',\r\n//       height: '100%',\r\n//       // overflowY: \"auto\",\r\n//       marginBottom: '76px'\r\n//     }\r\n//   },\r\n//   eqTypographyRoot: {\r\n//     color: '#000',\r\n//     fontWeight: 'bold',\r\n//     marginTop: theme.spacing(4)\r\n//   },\r\n//   eqPaperRoot: {\r\n//     padding: theme.spacing(3),\r\n//     height: '100%',\r\n//     marginBottom: theme.spacing(2)\r\n//   },\r\n//   eqPaperBtn: {\r\n//     width: '100%',\r\n//     height: '40px'\r\n//   }\r\n// }));\r\n\r\n// function SetCard({ setOpenDialog }) {\r\n//   const classes = useStyles();\r\n//   const dispatch = useDispatch();\r\n//   const [anchorEl, setAnchorEl] = React.useState(null);\r\n//   const [listId, setListId] = React.useState(0);\r\n\r\n//   const onHandleClickContextMenu = event => {\r\n//     setListId(parseInt(event.currentTarget.id));\r\n//     setAnchorEl(event.currentTarget);\r\n//   };\r\n\r\n//   const onHandleCloseContextMenu = () => {\r\n//     setAnchorEl(null);\r\n//   };\r\n\r\n//   const onHandleEditContextMenu = () => {\r\n//     console.log('Edit ListReducer Id: ', listId);\r\n\r\n//     let getTragetEquipment = listEQ.data.find(item => {\r\n//       return item.id === listId;\r\n//     });\r\n//     dispatch(createFormEQ(getTragetEquipment));\r\n\r\n//     setOpenDialog(true);\r\n//     onHandleCloseContextMenu();\r\n//   };\r\n\r\n//   const onHandleDeleteContextMenu = () => {\r\n//     console.log('Delete ListReducer Id: ', listId);\r\n//     onHandleCloseContextMenu();\r\n//   };\r\n\r\n//   return (\r\n//     <Fragment>\r\n//       <Container>\r\n//         <Box className={classes.boxEQRoot}>\r\n//           <Typography\r\n//             variant=\"subtitle1\"\r\n//             gutterBottom\r\n//             className={classes.eqTypographyRoot}\r\n//           >\r\n//             รายการอุปกรณ์ ({listEQ.total})\r\n//           </Typography>\r\n\r\n//           {listEQ.isFetching ? (\r\n//             <p>Loading...</p>\r\n//           ) : (\r\n//             <Fragment>\r\n//               {listEQ.data &&\r\n//                 listEQ.data\r\n//                   .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n//                   .map((item, index) => (\r\n//                     <Paper key={item.id} className={classes.eqPaperRoot}>\r\n//                       <Grid container>\r\n//                         <Grid item xs={2} sm={1} md={1}>\r\n//                           <Box\r\n//                             display=\"flex\"\r\n//                             alignItems=\"center\"\r\n//                             justifyContent=\"center\"\r\n//                             className={classes.fullHeight}\r\n//                           >\r\n//                             <img\r\n//                               alt=\"logo\"\r\n//                               height=\"40\"\r\n//                               src={item.imageBase64}\r\n//                               title=\"logo\"\r\n//                             />\r\n//                             {/* <Typography variant=\"body1\" noWrap gutterBottom>\r\n//                               {item.id}\r\n//                             </Typography> */}\r\n//                           </Box>\r\n//                         </Grid>\r\n//                         <Grid item xs={7} sm={9} md={10}>\r\n//                           <Typography variant=\"body1\" noWrap gutterBottom>\r\n//                             {item.name}\r\n//                             {/* {\" กรรไกรผ่าฟันคุดขนาดกลางแบบพิเศษ \"} */}\r\n//                           </Typography>\r\n//                           <Typography\r\n//                             variant=\"body1\"\r\n//                             color=\"textSecondary\"\r\n//                             noWrap\r\n//                             gutterBottom\r\n//                           >\r\n//                             {item.description}\r\n//                             {/* {\" ประเภทเครื่องมือ\"} */}\r\n//                           </Typography>\r\n//                         </Grid>\r\n//                         <Grid item xs={3} sm={2} md={1}>\r\n//                           <Box\r\n//                             display=\"flex\"\r\n//                             alignItems=\"center\"\r\n//                             className={classes.fullHeight}\r\n//                             pl={2}\r\n//                             pr={2}\r\n//                           >\r\n//                             <Button\r\n//                               id={item.id}\r\n//                               variant=\"outlined\"\r\n//                               size=\"small\"\r\n//                               aria-controls={item.id}\r\n//                               aria-haspopup=\"true\"\r\n//                               aria-owns={anchorEl ? item.id : null}\r\n//                               className={classes.eqPaperBtn}\r\n//                               onClick={onHandleClickContextMenu}\r\n//                             >\r\n//                               <MoreHorizIcon />\r\n//                             </Button>\r\n//                           </Box>\r\n//                         </Grid>\r\n//                       </Grid>\r\n//                     </Paper>\r\n//                   ))}\r\n//               <Menu\r\n//                 anchorEl={anchorEl}\r\n//                 keepMounted\r\n//                 open={Boolean(anchorEl)}\r\n//                 onClose={onHandleCloseContextMenu}\r\n//               >\r\n//                 <MenuItem onClick={onHandleEditContextMenu}>{'แก้ไข'}</MenuItem>\r\n//                 <MenuItem onClick={onHandleDeleteContextMenu}>{'ลบ'}</MenuItem>\r\n//               </Menu>\r\n//             </Fragment>\r\n//           )}\r\n//         </Box>\r\n//       </Container>\r\n//     </Fragment>\r\n//   );\r\n// }\r\n\r\n// export default SetCard;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, Grid } from '@material-ui/core';\r\nimport Sorting from './Sorting';\r\nimport SetCard from './SetCard';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  sortWrapper: {\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction Results({\r\n  loading,\r\n  equipments,\r\n  itemCounts,\r\n  limit,\r\n  onSortChange,\r\n  onRemove,\r\n  className,\r\n  ...rest\r\n}) {\r\n  const classes = useStyles();\r\n  const [mode, setMode] = useState('grid');\r\n\r\n  const handleModeChange = value => {\r\n    setMode(value);\r\n  };\r\n\r\n  if (loading === true) {\r\n    var obj = [];\r\n    for (var index = 0, total = 8; index < total; index++)\r\n      obj.push({ id: uuidv4() });\r\n\r\n    equipments = [...obj];\r\n  }\r\n\r\n  console.log('Results page');\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Sorting\r\n        itemCounts={itemCounts}\r\n        onSortChange={onSortChange}\r\n        onModeChange={handleModeChange}\r\n        className={classes.sortWrapper}\r\n      />\r\n      <Grid container spacing={1}>\r\n        {equipments.map(equipment => (\r\n          <Grid\r\n            item\r\n            key={equipment.id}\r\n            md={mode === 'grid' ? 3 : 12}\r\n            sm={mode === 'grid' ? 6 : 12}\r\n            xs={12}\r\n          >\r\n            <SetCard\r\n              equipments={equipment}\r\n              loading={loading}\r\n              onRemove={onRemove}\r\n              mode={mode}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nResults.propTypes = {\r\n  loading: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  itemCounts: PropTypes.number,\r\n  limit: PropTypes.number,\r\n  equipments: PropTypes.array.isRequired,\r\n  onSortChange: PropTypes.func,\r\n  onRemove: PropTypes.func\r\n};\r\n\r\nResults.defaultProps = {\r\n  loading: true,\r\n  itemCounts: 0,\r\n  limit: 0,\r\n  equipments: [],\r\n  onSortChange: () => {},\r\n  className: '',\r\n  onRemove: () => {}\r\n};\r\n\r\nexport default Results;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Box, makeStyles, TablePagination } from '@material-ui/core';\r\nimport { PAGING } from 'src/constants';\r\nimport { TRANSLATE_NS } from 'src/constants';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {}\r\n}));\r\n\r\nfunction Paging({\r\n  page,\r\n  limit,\r\n  count,\r\n  onChangePage,\r\n  onChangeRowsPerPage,\r\n  className,\r\n  ...rest\r\n}) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation([TRANSLATE_NS.TRANSLATIONS, TRANSLATE_NS.SETS]);\r\n  const pageOptions = PAGING.PAGE_OPTIONS;\r\n\r\n  const handleLimitChange = event => {\r\n    event.persist();\r\n    onChangeRowsPerPage(event.target.value);\r\n  };\r\n  const handlePageChange = (event, newPage) => {\r\n    event.persist();\r\n    onChangePage(newPage);\r\n  };\r\n  return (\r\n    <Box\r\n      className={clsx(className, classes.root)}\r\n      {...rest}\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={count}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={pageOptions}\r\n        labelRowsPerPage={t('translations:rows per page')}\r\n        nextIconButtonText={t('translations:next page')}\r\n        backIconButtonText={t('translations:previous page')}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nPaging.propTypes = {\r\n  page: PropTypes.number.isRequired,\r\n  limit: PropTypes.number.isRequired,\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  onChangeRowsPerPage: PropTypes.func.isRequired,\r\n  className: PropTypes.string\r\n};\r\n\r\nPaging.defaultProps = {\r\n  page: PAGING.PAGE,\r\n  limit: PAGING.PAGE_SIZES,\r\n  count: 0,\r\n  onChangePage: () => {},\r\n  onChangeRowsPerPage: () => {},\r\n  className: ''\r\n};\r\n\r\nexport default Paging;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { TRANSLATE_NS } from 'src/constants';\r\nimport SplashScreen from 'src/components/SplashScreen';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport equipmentsService from 'src/services/equipmentService';\r\nimport Page from 'src/components/Page';\r\nimport Header from './Header';\r\nimport Results from './Results';\r\nimport Paging from './Paging';\r\n\r\nimport { Box, Container, makeStyles } from '@material-ui/core';\r\n\r\nconst sortOptions = [\r\n  {\r\n    value: 'name|asc',\r\n    label: 'Name (Ascending A to Z)'\r\n  },\r\n  {\r\n    value: 'name|desc',\r\n    label: 'Name (Descending Z to A)'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default\r\n  },\r\n  content: {\r\n    marginTop: 60\r\n  }\r\n}));\r\n\r\nfunction EquipmentListView() {\r\n  const classes = useStyles();\r\n  const isMounted = useIsMountedRef();\r\n  const { t } = useTranslation([\r\n    TRANSLATE_NS.EQUIPMENTS,\r\n    TRANSLATE_NS.TRANSLATIONS\r\n  ]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [equipments, setEquipments] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [query, setQuery] = useState('');\r\n  const [sort, setSort] = useState(sortOptions[0].value);\r\n  const [page, setPage] = useState(0);\r\n  const [limit, setLimit] = useState(8);\r\n  //const [openDeleteConfirm, setOpenDeleteConfirm] = useState(false);\r\n  const currentDataItem = useRef(null);\r\n\r\n  const handleQueryChange = value => {\r\n    setQuery(() => value);\r\n  };\r\n\r\n  const handlePageChange = newPage => {\r\n    setPage(() => newPage);\r\n  };\r\n\r\n  const handleLimitChange = value => {\r\n    setLimit(() => value);\r\n  };\r\n\r\n  const handleSortChange = value => {\r\n    setSort(() => value);\r\n  };\r\n  const handleRemove = dataItem => {\r\n    currentDataItem.current = dataItem;\r\n    //setOpenDeleteConfirm(true);\r\n  };\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const getEquipmentsFromApi = async () => {\r\n      try {\r\n        const result = await equipmentsService.getList(\r\n          query,\r\n          sort,\r\n          page,\r\n          limit\r\n        );\r\n        if (!isMounted.current) return;\r\n\r\n        if (result.resultFlag) {\r\n          setEquipments(result.value);\r\n        } else {\r\n          setError(result.errors);\r\n        }\r\n      } catch (error) {\r\n        if (isMounted.current) setError(error.message);\r\n      } finally {\r\n        if (isMounted.current) setLoading(false);\r\n      }\r\n    };\r\n    getEquipmentsFromApi();\r\n  }, [query, sort, page, limit, isMounted]);\r\n\r\n  if (!equipments) {\r\n    return <SplashScreen />;\r\n  }\r\n\r\n  console.log('-----------render-----------', equipments);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title={t('equipments:register medical tools')}\r\n    >\r\n      <Header onSearch={handleQueryChange} />\r\n      <Container maxWidth=\"lg\" className={classes.content}>\r\n        {error && <div>{error}</div>}\r\n        {equipments && (\r\n          <Box>\r\n            <Results\r\n              loading={loading}\r\n              equipments={equipments.data}\r\n              itemCounts={equipments.data.length}\r\n              onSortChange={handleSortChange}\r\n              onRemove={handleRemove}\r\n              limit={limit}\r\n            />\r\n            <Paging\r\n              mt={1}\r\n              page={page}\r\n              limit={limit}\r\n              count={equipments.total}\r\n              onChangePage={handlePageChange}\r\n              onChangeRowsPerPage={handleLimitChange}\r\n            />\r\n          </Box>\r\n        )}\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\nexport default EquipmentListView;\r\n\r\n// import {\r\n//   SeacrhRegisterDesktop,\r\n//   SeacrhRegisterMobile,\r\n// } from \"src/components/SeachRegister\";\r\n// import SectionBar from \"src/components/SectionBar\";\r\n// import DialogStepper from \"src/components/equipment/DialogStepper\";\r\n// import EquipmentList from \"src/components/equipment/EquipmentList\";\r\n\r\n// const EquipmentView = () => {\r\n//   const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n//   const onHandleOpenRegister = () => {\r\n//     setOpenDialog(true);\r\n//     console.log(\"Click Button Open Dialog\");\r\n//   };\r\n\r\n//   const onHandleCloseRegister = () => {\r\n//     setOpenDialog(false);\r\n//     console.log(\"Click Button Close Dialog\");\r\n//   };\r\n\r\n//   const onHandleSubmitSearchForm = ({ search }) => {\r\n//     console.log(search);\r\n//     // console.log(moment(data.startDate._d).format(\"DD-MM-yyyy\")); // 28-05-2020\r\n//     // console.log(moment(data.startDate._d).local().format()); // 2020-05-28T10:29:26+07:00\r\n//   };\r\n\r\n//   const CustomSearchRegisterDesktop = () => {\r\n//     return (\r\n//       <SeacrhRegisterDesktop\r\n//         titleSearchName=\"ค้นหารายการเครื่องมือ\"\r\n//         titleSearchButtonName=\"ค้นหา\"\r\n//         onHandleSubmitSearchForm={onHandleSubmitSearchForm}\r\n//       />\r\n//     );\r\n//   };\r\n\r\n//   const CustomSearchRegisterMobile = () => {\r\n//     return (\r\n//       <SeacrhRegisterMobile\r\n//         titleSearchName=\"ค้นหารายการเครื่องมือ\"\r\n//         onHandleSubmitSearchForm={onHandleSubmitSearchForm}\r\n//       />\r\n//     );\r\n//   };\r\n\r\n//   const CustomDialogStepper = () => {\r\n//     return <DialogStepper onClickClose={onHandleCloseRegister} />;\r\n//   };\r\n\r\n//   return (\r\n//     <Fragment>\r\n//       <SectionBar\r\n//         flagComponentOpenDialogStep={openDialog}\r\n//         ComponentDialogStep={CustomDialogStepper}\r\n//         titleName=\"รายการเครื่องมือทางการแพทย์ \"\r\n//         titleButtonRegisterName=\"ลงทะเบียน\"\r\n//         titleButtonBackName=\"ย้อนกลับ\"\r\n//         isFlagRegister={true}\r\n//         onHandleOpenRegister={onHandleOpenRegister}\r\n//         ComponentSearchDesktop={CustomSearchRegisterDesktop}\r\n//         ComponentSearchMobile={CustomSearchRegisterMobile}\r\n//       />\r\n//       <EquipmentList setOpenDialog={setOpenDialog} />\r\n//     </Fragment>\r\n//   );\r\n// };\r\n// export default EquipmentView;\r\n","function track(...args) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      return;\r\n    }\r\n  \r\n    if (!window.gtag) {\r\n      return;\r\n    }\r\n  \r\n    window.gtag(...args);\r\n  }\r\n  \r\n  function pageview(props) {\r\n    track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\r\n  }\r\n  \r\n  function event(type, props) {\r\n    track('event', type, props);\r\n  }\r\n  \r\n  export default {\r\n    pageview,\r\n    event\r\n  };\r\n","import React, {\r\n    forwardRef,\r\n    useEffect, useCallback\r\n  } from 'react';\r\n  import { Helmet } from 'react-helmet';\r\n  import { useLocation } from 'react-router';\r\n  import PropTypes from 'prop-types';\r\n  import track from 'src/utils/analytics';\r\n  \r\n  const Page = forwardRef(({\r\n    title,\r\n    children,\r\n    ...rest\r\n  }, ref) => {\r\n    const location = useLocation();\r\n  \r\n    const sendPageViewEvent = useCallback(() => {\r\n      track.pageview({\r\n        page_path: location.pathname\r\n      });\r\n    }, [location]);\r\n  \r\n    useEffect(() => {\r\n      sendPageViewEvent();\r\n    }, [sendPageViewEvent]);\r\n  \r\n    return (\r\n      <div\r\n        ref={ref}\r\n        {...rest}\r\n      >\r\n        <Helmet>\r\n          <title>Smart CSSD - {title}</title>\r\n        </Helmet>\r\n        {children}\r\n      </div>\r\n    );\r\n  });\r\n  \r\n  Page.propTypes = {\r\n    children: PropTypes.node,\r\n    title: PropTypes.string\r\n  };\r\n  \r\n  export default Page;\r\n  ","import { useRef, useEffect } from 'react';\r\n\r\nexport default function useIsMountedRef() {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => () => {\r\n    isMounted.current = false;\r\n  }, []);\r\n\r\n  return isMounted;\r\n}\r\n","import React, { memo } from 'react'; \r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { TRANSLATE_NS } from 'src/constants';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {makeStyles, Button} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme)=> ({\r\n  root: {\r\n    color: theme.palette.primary.title\r\n  }\r\n}));\r\n\r\nfunction BackToMainPageButton({className, ...rest}){\r\n  const classes = useStyles();\r\n  const {t} = useTranslation([TRANSLATE_NS.TRANSLATIONS]);\r\n\r\n  return (\r\n    <Button\r\n      component={RouterLink}\r\n      to=\"/\"\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      {t('back to main page')}\r\n    </Button>\r\n  );\r\n}\r\n\r\nBackToMainPageButton.prototype = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default memo(BackToMainPageButton);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  root: {\r\n    color: theme.palette.primary.title\r\n  }\r\n}));\r\n\r\nfunction PageName({children, className, ...rest}){\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Typography\r\n      variant=\"h3\"\r\n      className={clsx(className, classes.root)}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nPageName.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PageName;\r\n","import React, {\r\n    useRef,\r\n    useState,\r\n    memo\r\n  } from 'react';\r\n  import PropTypes from 'prop-types';\r\n  import {\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Tooltip,\r\n    IconButton,\r\n    Menu,\r\n    MenuItem,\r\n    makeStyles\r\n  } from '@material-ui/core';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { TRANSLATE_NS } from 'src/constants';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {uid} from \"react-uid\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  menu: {\r\n    //width: 160,\r\n    maxWidth: '100%'\r\n  }\r\n}));\r\n\r\nfunction MoreButton({ buttonList, ...rest }) {\r\n  const classes = useStyles();\r\n  const moreRef = useRef(null);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const {t} = useTranslation([TRANSLATE_NS.TRANSLATIONS])\r\n\r\n  const handleMenuOpen = () => {\r\n    setOpenMenu(true);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  const handleItemClick = (buttonItem) => {\r\n    if(typeof buttonItem.click === \"function\") {\r\n      buttonItem.click();\r\n      setOpenMenu(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title={t('translations:more options')}>\r\n        <IconButton\r\n          {...rest}\r\n          onClick={handleMenuOpen}\r\n          ref={moreRef}\r\n        >\r\n          <MoreIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu\r\n        anchorEl={moreRef.current}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left'\r\n        }}\r\n        onClose={handleMenuClose}\r\n        open={openMenu}\r\n        PaperProps={{ className: classes.menu }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left'\r\n        }}\r\n      >\r\n        {\r\n          buttonList && buttonList.map((btn)=> {\r\n            return (\r\n              <MenuItem \r\n                onClick={()=> handleItemClick(btn)} \r\n                key={uid(btn)} \r\n                value={btn}\r\n              >\r\n                <ListItemIcon>\r\n                  {btn.icon}\r\n                </ListItemIcon>\r\n                <ListItemText primary={t(btn.translateKey)} />\r\n              </MenuItem>\r\n            );\r\n          })\r\n        }\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nMoreButton.propTypes = {\r\n  className: PropTypes.string,\r\n  buttonList: PropTypes.array.isRequired\r\n};\r\n\r\nMoreButton.defaultProps = {\r\n  className: '',\r\n  buttonList: []\r\n};\r\n\r\nexport default memo(MoreButton);\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'AddCircleOutlineOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M4 11h5V5H4v6zm0 7h5v-6H4v6zm6 0h5v-6h-5v6zm6 0h5v-6h-5v6zm-6-7h5V5h-5v6zm6-6v6h5V5h-5z\"\n}), 'ViewModule');\n\nexports.default = _default;","import axios from 'src/utils/axios'\r\n\r\nclass EquipmentService {\r\n  getAll = () =>\r\n    new Promise((resolve, reject) => {\r\n      axios\r\n        .get('/api/equipments')\r\n        .then(response => {\r\n          resolve(response.data);\r\n        })\r\n        .catch(error => {\r\n          reject({ data: [], total: 0, errors: error });\r\n        });\r\n    });\r\n\r\n  getList = (query, sort, page, limit) =>\r\n    new Promise((resolve, reject) => {\r\n      axios\r\n        .get('/api/equipments/fetch', { params: { query, sort, page, limit } })\r\n        .then(response => {\r\n          if (!response) {\r\n            reject({\r\n              resultFlag: false,\r\n              value: null,\r\n              errorCode: 'Something is wrong.',\r\n              errorMessage: `response is ${response}`,\r\n              activityId: null\r\n            });\r\n            return;\r\n          }\r\n          resolve({\r\n            resultFlag: true,\r\n            value: response.data\r\n          });\r\n        })\r\n        .catch(error => {\r\n          reject({\r\n            resultFlag: false,\r\n            value: null,\r\n            errorCode: 'Something is wrong.',\r\n            errorMessage: error.message,\r\n            activityId: null\r\n          });\r\n        });\r\n    });\r\n\r\n  //   getList = (query, sort, page, limit) => new Promise((resolve, reject) => {\r\n  //     this.getAll().then((response) => {\r\n  //       if(!response ){\r\n  //         reject(response)\r\n  //         return;\r\n  //       }\r\n\r\n  //       const {data} = response;\r\n\r\n  //       if(!Array.isArray(data)){\r\n  //         resolve({data: [], total: 0, errors: null})\r\n  //         return;\r\n  //       }\r\n\r\n  //       let dataItems = data;\r\n\r\n  //       //console.log(`setService: query[${query}] sort[${sort}] page[${page}] limit[${limit}]`);\r\n  //       const filteredItems = pagingService.applyFilters(dataItems, query, ['name']);\r\n  //       const sortedItems = pagingService.applySort(filteredItems, sort);\r\n  //       const paginatedItems = pagingService.applyPagination(sortedItems, page, limit);\r\n\r\n  //       //console.log('result: ', paginatedItems);\r\n\r\n  //       resolve({\r\n  //         data: paginatedItems,\r\n  //         total: filteredItems.length,\r\n  //         errors: null\r\n  //       });\r\n  //     })\r\n  //   })\r\n}\r\n\r\nconst equipmentService = new EquipmentService();\r\n\r\nexport default equipmentService;\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      borderRadius: theme.shape.borderRadius,\n      padding: 11,\n      border: \"1px solid \".concat(fade(theme.palette.action.active, 0.12)),\n      color: fade(theme.palette.action.active, 0.38),\n      '&$selected': {\n        color: theme.palette.action.active,\n        backgroundColor: fade(theme.palette.action.active, 0.12),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.action.active, 0.15)\n        },\n        '& + &': {\n          borderLeft: 0,\n          marginLeft: 0\n        }\n      },\n      '&$disabled': {\n        color: fade(theme.palette.action.disabled, 0.12)\n      },\n      '&:hover': {\n        textDecoration: 'none',\n        // Reset on mouse devices\n        backgroundColor: fade(theme.palette.text.primary, 0.05),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the `label` wrapper element. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 7,\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: 15,\n      fontSize: theme.typography.pxToRem(15)\n    }\n  };\n};\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disabled\", \"disableFocusRipple\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, disabled && classes.disabled, selected && classes.selected, size !== 'medium' && classes[\"size\".concat(capitalize(size))]),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    \"aria-pressed\": selected\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button will be rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButton'\n})(ToggleButton);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Trash2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"3 6 5 6 21 6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"10\",\n    y1: \"11\",\n    x2: \"10\",\n    y2: \"17\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"14\",\n    y1: \"11\",\n    x2: \"14\",\n    y2: \"17\"\n  }));\n});\nTrash2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTrash2.displayName = 'Trash2';\nexport default Trash2;","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport isValueSelected from './isValueSelected';\nimport { withStyles } from '@material-ui/core/styles';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {},\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1,\n        borderTop: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    }\n  };\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$exclusive = props.exclusive,\n      exclusive = _props$exclusive === void 0 ? false : _props$exclusive,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"exclusive\", \"onChange\", \"orientation\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    var index = value && value.indexOf(buttonValue);\n    var newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  var handleExclusiveChange = function handleExclusiveChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], child.props.className),\n      onChange: exclusive ? handleExclusiveChange : handleChange,\n      selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n      size: child.props.size || size\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the buttons.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButtonGroup'\n})(ToggleButtonGroup);"],"sourceRoot":""}