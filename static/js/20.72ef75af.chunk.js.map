{"version":3,"sources":["components/ForgotPasswordImg.js","views/auth/ForgotPasswordView/index.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js"],"names":["ForgotPasswordImg","alt","src","width","useStyles","makeStyles","theme","root","backgroundColor","palette","background","default","paper","paddingTop","display","flexDirection","alignItems","text__header","marginTop","spacing","fontStyle","text","textAlign","btn__sendEmail","form","errorWrapper","colors","red","padding","margin","ForgotPassword","inputName","classes","dispatch","useDispatch","enqueueSnackbar","useSnackbar","history","useHistory","t","useTranslation","TRANSLATE_NS","TRANSLATIONS","useState","result","setResult","schema","yup","shape","email","required","useForm","mode","defaultValues","resolver","yupResolver","control","errors","handleSubmit","formState","isSubmitting","isValid","onSubmit","data","a","console","log","forgotPassWordAction","variant","push","Container","component","maxWidth","CssBaseline","className","Typography","paragraph","noValidate","Paper","elevation","color","message","name","render","props","TextField","fullWidth","label","value","errorMessage","Button","disabled","type","Grid","item","xs","Box","justifyContent","size","Link","to","style","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","React","ref","_props$alignContent","alignContent","_props$alignItems","classNameProp","_props$component","Component","_props$container","container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","_extends","StyledGrid","withStyles","boxSizing","flexWrap","minWidth","breakpoint","styles","forEach","themeSpacing","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","Math","round","flexBasis","flexGrow","up","generateGrid","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","capitalize","_defineProperty","marginLeft","marginRight","paddingLeft","paddingRight","Object","values","acc","maxWidthXs","max","maxWidthSm","maxWidthMd","maxWidthLg","maxWidthXl","html","WebkitFontSmoothing","MozOsxFontSmoothing","body","primary","typography","body2","common","white","fontWeight","fontWeightBold","_props$children","children"],"mappings":"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","file":"static/js/20.72ef75af.chunk.js","sourcesContent":["import React from 'react';\r\nfunction ForgotPasswordImg() {\r\n  return (\r\n    <img\r\n      alt=\"ForgotPasswordImg\"\r\n      src=\"/unlock-400px.png\"\r\n      width=\"50%\"\r\n    />\r\n  );\r\n}\r\nexport default ForgotPasswordImg;","import React, {useState} from 'react';\r\nimport ForgotPasswordImg from 'src/components/ForgotPasswordImg';\r\nimport { Container, Typography, TextField, Button, Grid, Box, colors, Paper, CssBaseline} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { forgotPassWordAction } from \"src/actions/accountActions\";\r\nimport { useSnackbar } from 'notistack';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport { TRANSLATE_NS } from 'src/constants';\r\nimport { yupResolver } from '@hookform/resolvers';\r\nimport * as yup from 'yup';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme)=> ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  paper: {\r\n    paddingTop: '3rem',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  text__header: {\r\n    marginTop: theme.spacing(8),\r\n    fontStyle: 'italic'\r\n  },\r\n  text: {\r\n    marginTop: theme.spacing(3),\r\n    textAlign: 'center'\r\n  },\r\n  btn__sendEmail:{\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  errorWrapper: {\r\n    backgroundColor: colors.red[100],\r\n    padding: theme.spacing(2),\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n}));\r\n\r\nconst ForgotPassword = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const history = useHistory();\r\n  const {t} = useTranslation([TRANSLATE_NS.TRANSLATIONS]);\r\n  const [result, setResult] = useState(null);\r\n\r\n\r\n  const schema = yup.object().shape({\r\n    email: yup.string().email(t('translations:must be a valid email')).required(t('translations:required')),\r\n  })\r\n\r\n  const { control, errors, handleSubmit, formState } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      email: '',\r\n    },    \r\n    resolver: yupResolver(schema)\r\n  })\r\n\r\n  const { isSubmitting, isValid } = formState\r\n\r\n  const onSubmit = handleSubmit(async (data) => {\r\n    try{\r\n      console.log('isValid: ', isValid);\r\n      if(!isValid){\r\n        return;\r\n      }\r\n\r\n      const email = data;\r\n      await dispatch(forgotPassWordAction(email))\r\n      enqueueSnackbar(t('translations:email has been sent successfully'), {\r\n        variant: 'success'\r\n      });\r\n      history.push('/')\r\n    }\r\n    catch(error){\r\n      console.log(error);\r\n      setResult(()=> error);\r\n    }\r\n  })\r\n\r\n  const hasError = inputName => !!(errors && errors[inputName])\r\n  const errorMessage = inputName => errors[inputName]?.message ?? null\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n    <CssBaseline />\r\n      <div className={classes.paper}>\r\n         <ForgotPasswordImg />\r\n\r\n        <Typography variant=\"h3\" className={classes.text__header}>\r\n        {t('translations:forgot password')}\r\n        </Typography>\r\n\r\n        <Typography component=\"span\" className={classes.text} paragraph>\r\n        {t('translations:enter email to reset password')}\r\n        </Typography>\r\n        <form className={classes.form}\r\n          noValidate\r\n          onSubmit={onSubmit}\r\n        >\r\n\r\n        {/* Error form API */}\r\n              {result && (\r\n          <Paper \r\n            elevation={0}\r\n            className={classes.errorWrapper}\r\n          >\r\n            <Typography variant=\"body2\" color=\"error\">\r\n              {result?.data?.message}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n\r\n        {/*Email part */}\r\n          <Controller            \r\n            name={\"email\"}\r\n            control={control}\r\n            render={(props) => (\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label={t('translations:email')}\r\n                value={props.value}\r\n                {...props}\r\n              />\r\n            )}\r\n          />\r\n          {/*Validation for Email*/}\r\n          {hasError(\"email\") && (\r\n            <div>\r\n              <Typography variant=\"body2\" color=\"error\">\r\n                {errorMessage(\"email\")}\r\n              </Typography>\r\n            </div>\r\n          )}\r\n          {/* Send email button part */}\r\n          <Button\r\n            disabled={isSubmitting}\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.btn__sendEmail}\r\n          >\r\n            {t('translations:send email')}\r\n          </Button>\r\n          <Grid item xs>\r\n            <Box display=\"flex\" justifyContent=\"center\">\r\n              <Button\r\n                size=\"small\"\r\n                component={Link}\r\n                to=\"/login\"\r\n                className={classes.btn__sendEmail}\r\n              >\r\n              {t('translations:back to login')}\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </form>\r\n\r\n        <Grid item xs style={{ paddingTop: 80 }}>\r\n          <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              component={Link}\r\n              to=\"/reset-password\"\r\n            >\r\n            Test New Password\r\n          </Button>\r\n        </Grid>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\nexport default ForgotPassword;\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { exactProp } from '@material-ui/utils';\nexport var html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box'\n};\nexport var body = function body(theme) {\n  return _extends({\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    backgroundColor: theme.palette.background.default,\n    '@media print': {\n      // Save printer ink.\n      backgroundColor: theme.palette.common.white\n    }\n  });\n};\nexport var styles = function styles(theme) {\n  return {\n    '@global': {\n      html: html,\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: theme.typography.fontWeightBold\n      },\n      body: _extends({\n        margin: 0\n      }, body(theme), {\n        // Add support for document.body.requestFullScreen().\n        // Other elements, if background transparent, are not supported.\n        '&::backdrop': {\n          backgroundColor: theme.palette.background.default\n        }\n      })\n    }\n  };\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  /* eslint-disable no-unused-vars */\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children,\n      classes = props.classes;\n  /* eslint-enable no-unused-vars */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default withStyles(styles, {\n  name: 'MuiCssBaseline'\n})(CssBaseline);"],"sourceRoot":""}