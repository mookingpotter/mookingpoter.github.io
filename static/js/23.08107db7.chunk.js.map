{"version":3,"sources":["utils/analytics.js","components/Page.js","../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","views/pages/AccountView/General/GeneralSettings.js","views/pages/AccountView/General/index.js","views/pages/AccountView/index.js"],"names":["track","window","gtag","pageview","props","process","event","type","Page","forwardRef","ref","title","children","rest","location","useLocation","sendPageViewEvent","useCallback","page_path","pathname","useEffect","Helmet","Container","React","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","String","withStyles","theme","_defineProperty","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","replace","Grid","_props$alignContent","alignContent","_props$alignItems","alignItems","classNameProp","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","_props$md","_props$sm","_props$spacing","_props$wrap","wrap","_props$xl","_props$xs","_props$zeroMinWidth","zeroMinWidth","StyledGrid","flexWrap","margin","minWidth","flexDirection","justifyContent","styles","forEach","themeSpacing","padding","generateGutter","accumulator","key","globalStyles","size","round","flexBasis","flexGrow","generateGrid","useStyles","makeStyles","GeneralSettings","user","General","useSelector","state","account","backgroundColor","palette","background","default","minHeight","paddingTop","paddingBottom","AccountView"],"mappings":"+JAAA,SAASA,IAAgB,IAAD,EAKfC,OAAOC,OAIZ,EAAAD,QAAOC,KAAP,mBAWa,OACbC,SATF,SAAkBC,GAChBJ,EAAM,SAAUK,GAAyCD,IASzDE,MANF,SAAeC,EAAMH,GACnBJ,EAAM,QAASO,EAAMH,KCRjBI,EAAOC,sBAAW,WAIrBC,GAAS,IAHVC,EAGS,EAHTA,MACAC,EAES,EAFTA,SACGC,EACM,oCACHC,EAAWC,cAEXC,EAAoBC,uBAAY,WACpCjB,EAAMG,SAAS,CACbe,UAAWJ,EAASK,aAErB,CAACL,IAMJ,OAJAM,qBAAU,WACRJ,MACC,CAACA,IAGF,uCACEN,IAAKA,GACDG,GAEJ,kBAACQ,EAAA,EAAD,KACE,+CAAqBV,IAEtBC,MAUQJ,O,iCC5CjB,6DAqEIc,EAAyBC,cAAiB,SAAmBnB,EAAOM,GACtE,IAAIc,EAAUpB,EAAMoB,QAChBC,EAAYrB,EAAMqB,UAClBC,EAAmBtB,EAAMuB,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAwBzB,EAAM0B,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAe3B,EAAM4B,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAkB7B,EAAM8B,SACxBA,OAA+B,IAApBD,EAA6B,KAAOA,EAC/CE,EAAQC,YAAyBhC,EAAO,CAAC,UAAW,YAAa,YAAa,iBAAkB,QAAS,aAE7G,OAAoBmB,gBAAoBK,EAAWS,YAAS,CAC1DZ,UAAWa,YAAKd,EAAQe,KAAMd,EAAWO,GAASR,EAAQQ,MAAOF,GAAkBN,EAAQM,gBAA6B,IAAbI,GAAsBV,EAAQ,WAAWgB,OAAOC,YAAWC,OAAOR,OAC7KxB,IAAKA,GACJyB,QAsDUQ,iBAnIK,SAAgBC,GAClC,MAAO,CAELL,KAAMM,YAAgB,CACpBC,MAAO,OACPC,WAAY,OACZC,UAAW,aACXC,YAAa,OACbC,YAAaN,EAAMO,QAAQ,GAC3BC,aAAcR,EAAMO,QAAQ,GAC5BE,QAAS,SACRT,EAAMU,YAAYC,GAAG,MAAO,CAC7BL,YAAaN,EAAMO,QAAQ,GAC3BC,aAAcR,EAAMO,QAAQ,KAI9BrB,eAAgB,CACdoB,YAAa,EACbE,aAAc,GAIhBpB,MAAOwB,OAAOC,KAAKb,EAAMU,YAAYI,QAAQC,QAAO,SAAUC,EAAKC,GACjE,IAAIC,EAAQlB,EAAMU,YAAYI,OAAOG,GAQrC,OANc,IAAVC,IACFF,EAAIhB,EAAMU,YAAYC,GAAGM,IAAe,CACtC3B,SAAU4B,IAIPF,IACN,IAGHG,WAAYlB,YAAgB,GAAID,EAAMU,YAAYC,GAAG,MAAO,CAC1DrB,SAAU8B,KAAKC,IAAIrB,EAAMU,YAAYI,OAAOQ,GAAI,OAIlDC,WAAYtB,YAAgB,GAAID,EAAMU,YAAYC,GAAG,MAAO,CAC1DrB,SAAUU,EAAMU,YAAYI,OAAOU,KAIrCC,WAAYxB,YAAgB,GAAID,EAAMU,YAAYC,GAAG,MAAO,CAC1DrB,SAAUU,EAAMU,YAAYI,OAAOY,KAIrCC,WAAY1B,YAAgB,GAAID,EAAMU,YAAYC,GAAG,MAAO,CAC1DrB,SAAUU,EAAMU,YAAYI,OAAOc,KAIrCC,WAAY5B,YAAgB,GAAID,EAAMU,YAAYC,GAAG,MAAO,CAC1DrB,SAAUU,EAAMU,YAAYI,OAAOgB,QA0EP,CAChCC,KAAM,gBADOhC,CAEZrB,I,iCC7IH,8CAiBIsD,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1CC,EAAa,CAAC,QAAQ,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IA4CnE,SAASC,EAAUC,GACjB,IAAIC,EAAMC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAC1EG,EAAQC,WAAWN,GACvB,MAAO,GAAGvC,OAAO4C,EAAQJ,GAAKxC,OAAOE,OAAOqC,GAAKO,QAAQ5C,OAAO0C,GAAQ,KAAO,MA6B1E,IA6HHG,EAAoBhE,cAAiB,SAAcnB,EAAOM,GAC5D,IAAI8E,EAAsBpF,EAAMqF,aAC5BA,OAAuC,IAAxBD,EAAiC,UAAYA,EAC5DE,EAAoBtF,EAAMuF,WAC1BA,OAAmC,IAAtBD,EAA+B,UAAYA,EACxDlE,EAAUpB,EAAMoB,QAChBoE,EAAgBxF,EAAMqB,UACtBC,EAAmBtB,EAAMuB,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDmE,EAAmBzF,EAAM0F,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAmB3F,EAAM4F,UACzBA,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAc7F,EAAM8F,KACpBA,OAAuB,IAAhBD,GAAiCA,EACxCE,EAAiB/F,EAAMgG,QACvBA,OAA6B,IAAnBD,EAA4B,aAAeA,EACrDE,EAAYjG,EAAMoE,GAClBA,OAAmB,IAAd6B,GAA+BA,EACpCC,EAAYlG,EAAMkE,GAClBA,OAAmB,IAAdgC,GAA+BA,EACpCC,EAAYnG,EAAMgE,GAClBA,OAAmB,IAAdmC,GAA+BA,EACpCC,EAAiBpG,EAAM+C,QACvBA,OAA6B,IAAnBqD,EAA4B,EAAIA,EAC1CC,EAAcrG,EAAMsG,KACpBA,OAAuB,IAAhBD,EAAyB,OAASA,EACzCE,EAAYvG,EAAMsE,GAClBA,OAAmB,IAAdiC,GAA+BA,EACpCC,EAAYxG,EAAM8D,GAClBA,OAAmB,IAAd0C,GAA+BA,EACpCC,EAAsBzG,EAAM0G,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxD1E,EAAQC,YAAyBhC,EAAO,CAAC,eAAgB,aAAc,UAAW,YAAa,YAAa,YAAa,YAAa,OAAQ,UAAW,KAAM,KAAM,KAAM,UAAW,OAAQ,KAAM,KAAM,iBAE1MqB,EAAYa,YAAKd,EAAQe,KAAMqD,EAAeE,GAAa,CAACtE,EAAQsE,UAAuB,IAAZ3C,GAAiB3B,EAAQ,cAAcgB,OAAOE,OAAOS,MAAa+C,GAAQ1E,EAAQ0E,KAAMY,GAAgBtF,EAAQsF,aAA4B,QAAdd,GAAuBxE,EAAQ,gBAAgBgB,OAAOE,OAAOsD,KAAuB,SAATU,GAAmBlF,EAAQ,WAAWgB,OAAOE,OAAOgE,KAAwB,YAAff,GAA4BnE,EAAQ,kBAAkBgB,OAAOE,OAAOiD,KAAgC,YAAjBF,GAA8BjE,EAAQ,oBAAoBgB,OAAOE,OAAO+C,KAA6B,eAAZW,GAA4B5E,EAAQ,cAAcgB,OAAOE,OAAO0D,MAAmB,IAAPlC,GAAgB1C,EAAQ,WAAWgB,OAAOE,OAAOwB,MAAc,IAAPE,GAAgB5C,EAAQ,WAAWgB,OAAOE,OAAO0B,MAAc,IAAPE,GAAgB9C,EAAQ,WAAWgB,OAAOE,OAAO4B,MAAc,IAAPE,GAAgBhD,EAAQ,WAAWgB,OAAOE,OAAO8B,MAAc,IAAPE,GAAgBlD,EAAQ,WAAWgB,OAAOE,OAAOgC,MACl2B,OAAoBnD,gBAAoBK,EAAWS,YAAS,CAC1DZ,UAAWA,EACXf,IAAKA,GACJyB,OA+GD4E,EAAapE,aAnRG,SAAgBC,GAClC,OAAOP,YAAS,CAEdE,KAAM,GAGNuD,UAAW,CACT9C,UAAW,aACXK,QAAS,OACT2D,SAAU,OACVlE,MAAO,QAIToD,KAAM,CACJlD,UAAW,aACXiE,OAAQ,KAKVH,aAAc,CACZI,SAAU,GAIZ,sBAAuB,CACrBC,cAAe,UAIjB,8BAA+B,CAC7BA,cAAe,kBAIjB,2BAA4B,CAC1BA,cAAe,eAIjB,iBAAkB,CAChBH,SAAU,UAIZ,uBAAwB,CACtBA,SAAU,gBAIZ,wBAAyB,CACvBrB,WAAY,UAId,4BAA6B,CAC3BA,WAAY,cAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBF,aAAc,UAIhB,8BAA+B,CAC7BA,aAAc,cAIhB,4BAA6B,CAC3BA,aAAc,YAIhB,iCAAkC,CAChCA,aAAc,iBAIhB,gCAAiC,CAC/BA,aAAc,gBAIhB,oBAAqB,CACnB2B,eAAgB,UAIlB,sBAAuB,CACrBA,eAAgB,YAIlB,2BAA4B,CAC1BA,eAAgB,iBAIlB,0BAA2B,CACzBA,eAAgB,gBAIlB,0BAA2B,CACzBA,eAAgB,iBA/ItB,SAAwBxE,EAAOiB,GAC7B,IAAIwD,EAAS,GAgBb,OAfAzC,EAAS0C,SAAQ,SAAUnE,GACzB,IAAIoE,EAAe3E,EAAMO,QAAQA,GAEZ,IAAjBoE,IAIJF,EAAO,WAAW7E,OAAOqB,EAAY,KAAKrB,OAAOW,IAAY,CAC3D8D,OAAQ,IAAIzE,OAAOsC,EAAUyC,EAAc,IAC3CzE,MAAO,eAAeN,OAAOsC,EAAUyC,GAAe,KACtD,YAAa,CACXC,QAAS1C,EAAUyC,EAAc,SAIhCF,EAgIJI,CAAe7E,EAAO,MAAOA,EAAMU,YAAYG,KAAKE,QAAO,SAAU+D,EAAaC,GAGnF,OApMJ,SAAsBC,EAAchF,EAAOiB,GACzC,IAAIwD,EAAS,GACbxC,EAAWyC,SAAQ,SAAUO,GAC3B,IAAIF,EAAM,QAAQnF,OAAOqB,EAAY,KAAKrB,OAAOqF,GAEjD,IAAa,IAATA,EAUJ,GAAa,SAATA,EAAJ,CAUA,IAAI/E,EAAQ,GAAGN,OAAOwB,KAAK8D,MAAMD,EAAO,GAAK,KAAQ,IAAM,KAG3DR,EAAOM,GAAO,CACZI,UAAWjF,EACXkF,SAAU,EACV9F,SAAUY,QAfVuE,EAAOM,GAAO,CACZI,UAAW,OACXC,SAAU,EACV9F,SAAU,aAZZmF,EAAOM,GAAO,CACZI,UAAW,EACXC,SAAU,EACV9F,SAAU,WAyBG,OAAf2B,EACFxB,YAASuF,EAAcP,GAEvBO,EAAahF,EAAMU,YAAYC,GAAGM,IAAewD,EA6JjDY,CAAaP,EAAa9E,EAAO+E,GAC1BD,IACN,OAwJ+B,CAClC/C,KAAM,WADShC,CAEd4C,GAmBYwB,O,wHC/XTmB,EAAYC,aAAW,iBAAO,CAClC5F,KAAM,OAkBO6F,MAff,YAAuD,EAA5BC,KAA6B,IAAvB5G,EAAsB,EAAtBA,UAAcZ,EAAQ,oCAC/CW,EAAU0G,IAChB,OACE,uCACEzG,UAAWa,YAAKd,EAAQe,KAAMd,IAC1BZ,KCTJqH,EAAYC,aAAW,iBAAO,CAChC5F,KAAM,OAgCK+F,MA5Bf,YAA0C,IAAvB7G,EAAsB,EAAtBA,UAAcZ,EAAQ,6BACjCW,EAAU0G,IACRG,EAASE,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAAtCJ,KAER,OACE,kBAAC9C,EAAA,EAAD,eACE9D,UAAWa,YAAKd,EAAQe,KAAMd,GAC9BqE,WAAS,EACT3C,QAAS,GACLtC,GAEJ,kBAAC0E,EAAA,EAAD,CACEW,MAAI,EACJ1B,GAAI,EACJF,GAAI,EACJI,GAAI,EACJR,GAAI,IAEJ,kBAAC,EAAD,CAAiBmE,KAAMA,OCzBzBH,EAAYC,aAAW,SAACvF,GAAD,MAAW,CACpCL,KAAM,CACFmG,gBAAiB9F,EAAM+F,QAAQC,WAAWC,QAC1CC,UAAW,OACXC,WAAYnG,EAAMO,QAAQ,GAC1B6F,cAAepG,EAAMO,QAAQ,QAoBtB8F,UAhBf,WAEI,IAAMzH,EAAU0G,IAEhB,OACI,kBAAC1H,EAAA,EAAD,CACEiB,UAAWD,EAAQe,KACnB5B,MAAM,WAEJ,kBAACW,EAAA,EAAD,CAAWY,SAAS,MAChB,kBAAC,EAAD","file":"static/js/23.08107db7.chunk.js","sourcesContent":["function track(...args) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      return;\r\n    }\r\n  \r\n    if (!window.gtag) {\r\n      return;\r\n    }\r\n  \r\n    window.gtag(...args);\r\n  }\r\n  \r\n  function pageview(props) {\r\n    track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\r\n  }\r\n  \r\n  function event(type, props) {\r\n    track('event', type, props);\r\n  }\r\n  \r\n  export default {\r\n    pageview,\r\n    event\r\n  };\r\n","import React, {\r\n    forwardRef,\r\n    useEffect, useCallback\r\n  } from 'react';\r\n  import { Helmet } from 'react-helmet';\r\n  import { useLocation } from 'react-router';\r\n  import PropTypes from 'prop-types';\r\n  import track from 'src/utils/analytics';\r\n  \r\n  const Page = forwardRef(({\r\n    title,\r\n    children,\r\n    ...rest\r\n  }, ref) => {\r\n    const location = useLocation();\r\n  \r\n    const sendPageViewEvent = useCallback(() => {\r\n      track.pageview({\r\n        page_path: location.pathname\r\n      });\r\n    }, [location]);\r\n  \r\n    useEffect(() => {\r\n      sendPageViewEvent();\r\n    }, [sendPageViewEvent]);\r\n  \r\n    return (\r\n      <div\r\n        ref={ref}\r\n        {...rest}\r\n      >\r\n        <Helmet>\r\n          <title>Smart CSSD - {title}</title>\r\n        </Helmet>\r\n        {children}\r\n      </div>\r\n    );\r\n  });\r\n  \r\n  Page.propTypes = {\r\n    children: PropTypes.node,\r\n    title: PropTypes.string\r\n  };\r\n  \r\n  export default Page;\r\n  ","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nfunction GeneralSettings({ user, className, ...rest }) {\r\n  const classes = useStyles()\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    ></div>\r\n  );\r\n}\r\n\r\nGeneralSettings.propTypes = {\r\n  className: PropTypes.string,\r\n  user: PropTypes.object.isRequired\r\n};\r\n\r\nexport default GeneralSettings;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid, makeStyles } from '@material-ui/core';\r\nimport GeneralSettings from './GeneralSettings';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {}\r\n}));\r\n\r\n\r\nfunction General({ className, ...rest }) {\r\n  const classes = useStyles();\r\n  const { user } = useSelector((state) => state.account);\r\n\r\n  return (\r\n    <Grid\r\n      className={clsx(classes.root, className)}\r\n      container\r\n      spacing={3}\r\n      {...rest}\r\n    >\r\n      <Grid\r\n        item\r\n        lg={8}\r\n        md={6}\r\n        xl={9}\r\n        xs={12}\r\n      >\r\n        <GeneralSettings user={user} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nGeneral.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default General;","import React from 'react';\r\nimport { makeStyles, Container } from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport General from './General';\r\n\r\nconst useStyles = makeStyles((theme)=> ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.default,\r\n        minHeight: '100%',\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3)\r\n    }\r\n}))\r\n\r\nfunction AccountView(){\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Page\r\n          className={classes.root}\r\n          title=\"Account\"\r\n        >\r\n            <Container maxWidth=\"lg\">\r\n                <General />\r\n            </Container>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default AccountView;"],"sourceRoot":""}